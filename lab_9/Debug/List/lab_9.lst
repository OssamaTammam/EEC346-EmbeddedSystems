
AVRASM ver. 2.1.30  D:\Uni\Programming\term_8\embedded_systems\lab_9\Debug\List\lab_9.asm Tue Apr 30 14:07:08 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0061 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3a61
00002b 2520
00002c 2075
00002d 3a62      	.DB  0x61,0x3A,0x20,0x25,0x75,0x20,0x62,0x3A
00002e 2520
00002f 2075
000030 3a63
000031 2520      	.DB  0x20,0x25,0x75,0x20,0x63,0x3A,0x20,0x25
000032 2075
000033 0a0d
000034 0020
000035 6948      	.DB  0x75,0x20,0xD,0xA,0x20,0x0,0x48,0x69
000036 6867
000037 203a
000038 6625
000039 0d20      	.DB  0x67,0x68,0x3A,0x20,0x25,0x66,0x20,0xD
00003a 000a
00003b 6f4c
00003c 3a77
00003d 2520      	.DB  0xA,0x0,0x4C,0x6F,0x77,0x3A,0x20,0x25
00003e 2066
00003f 0a0d
000040 5000
000041 7265      	.DB  0x66,0x20,0xD,0xA,0x0,0x50,0x65,0x72
000042 6f69
000043 3a64
000044 2520
000045 2066      	.DB  0x69,0x6F,0x64,0x3A,0x20,0x25,0x66,0x20
000046 0a0d
000047 6600
000048 6572
000049 2071      	.DB  0xD,0xA,0x0,0x66,0x72,0x65,0x71,0x20
00004a 6625
00004b 2c20
00004c 4420
00004d 7475      	.DB  0x25,0x66,0x20,0x2C,0x20,0x44,0x75,0x74
00004e 3a79
00004f 2520
000050 2066
000051 2025      	.DB  0x79,0x3A,0x20,0x25,0x66,0x20,0x25,0x20
000052 0a0d
000053 0020      	.DB  0xD,0xA,0x20,0x0
                 _0x2000000:
000054 4e2d
000055 4e41
D:\Uni\Programming\term_8\embedded_systems\lab_9\Debug\List\lab_9.asm(1128): warning: .cseg .db misalignment - padding zero byte
000056 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
D:\Uni\Programming\term_8\embedded_systems\lab_9\Debug\List\lab_9.asm(1130): warning: .cseg .db misalignment - padding zero byte
000057 0001      	.DB  0x1
                 _0x2080000:
000058 4e2d
000059 4e41
00005a 4900
00005b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Uni\Programming\term_8\embedded_systems\lab_9\Debug\List\lab_9.asm(1133): warning: .cseg .db misalignment - padding zero byte
00005c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00005d 0001      	.DW  0x01
00005e 0260      	.DW  __seed_G104
00005f 00ae      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000060 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000061 94f8      	CLI
000062 27ee      	CLR  R30
000063 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000064 e0f1      	LDI  R31,1
000065 bff5      	OUT  MCUCR,R31
000066 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000067 e08d      	LDI  R24,(14-2)+1
000068 e0a2      	LDI  R26,2
000069 27bb      	CLR  R27
                 __CLEAR_REG:
00006a 93ed      	ST   X+,R30
00006b 958a      	DEC  R24
00006c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000070 93ed      	ST   X+,R30
000071 9701      	SBIW R24,1
000072 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000073 ebea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000074 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000075 9185      	LPM  R24,Z+
000076 9195      	LPM  R25,Z+
000077 9700      	SBIW R24,0
000078 f061      	BREQ __GLOBAL_INI_END
000079 91a5      	LPM  R26,Z+
00007a 91b5      	LPM  R27,Z+
00007b 9005      	LPM  R0,Z+
00007c 9015      	LPM  R1,Z+
00007d 01bf      	MOVW R22,R30
00007e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007f 9005      	LPM  R0,Z+
000080 920d      	ST   X+,R0
000081 9701      	SBIW R24,1
000082 f7e1      	BRNE __GLOBAL_INI_LOOP
000083 01fb      	MOVW R30,R22
000084 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000085 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000086 bfed      	OUT  SPL,R30
000087 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000088 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000089 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008b 940c 008d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the CodeWizardAVR V3.40
                 ;Automatic Program Generator
                 ;? Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 4/24/2024
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega32A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 11.059200 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#define  Timer1_CLK (11059200UL / 8)
                 ;#define  ICR1  ( ICR1L | ((unsigned int)(ICR1H) << 8))
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;// Declare your global variables here
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;void main(void)
                 ; 0000 0020 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0021 // Declare your local variables here
                 ; 0000 0022 unsigned int a,b,c;
                 ; 0000 0023 float high, low, period;
                 ; 0000 0024 float freq;
                 ; 0000 0025 float duty_cycle;
                 ; 0000 0026 
                 ; 0000 0027 // Declare your local variables here
                 ; 0000 0028 
                 ; 0000 0029 // Input/Output Ports initialization
                 ; 0000 002A // Port A initialization
                 ; 0000 002B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002C DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00008d 9764      	SBIW R28,20
                 ;	a -> R16,R17
                 ;	b -> R18,R19
                 ;	c -> R20,R21
                 ;	high -> Y+16
                 ;	low -> Y+12
                 ;	period -> Y+8
                 ;	freq -> Y+4
                 ;	duty_cycle -> Y+0
00008e e0e0      	LDI  R30,LOW(0)
00008f bbea      	OUT  0x1A,R30
                 ; 0000 002D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002E PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000090 bbeb      	OUT  0x1B,R30
                 ; 0000 002F 
                 ; 0000 0030 // Port B initialization
                 ; 0000 0031 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
                 ; 0000 0032 DDRB=(1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000091 e8e8      	LDI  R30,LOW(136)
000092 bbe7      	OUT  0x17,R30
                 ; 0000 0033 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=T
                 ; 0000 0034 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000093 e0e0      	LDI  R30,LOW(0)
000094 bbe8      	OUT  0x18,R30
                 ; 0000 0035 
                 ; 0000 0036 // Port C initialization
                 ; 0000 0037 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0038 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000095 bbe4      	OUT  0x14,R30
                 ; 0000 0039 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003A PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000096 bbe5      	OUT  0x15,R30
                 ; 0000 003B 
                 ; 0000 003C // Port D initialization
                 ; 0000 003D // Function: Bit7=In Bit6=In Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003E DDRD=(1<<DDD7) | (0<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000097 eae0      	LDI  R30,LOW(160)
000098 bbe1      	OUT  0x11,R30
                 ; 0000 003F // State: Bit7=0 Bit6=T Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0040 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000099 e0e0      	LDI  R30,LOW(0)
00009a bbe2      	OUT  0x12,R30
                 ; 0000 0041 
                 ; 0000 0042 // Timer/Counter 0 initialization
                 ; 0000 0043 // Clock source: System Clock
                 ; 0000 0044 // Clock value: 43.200 kHz
                 ; 0000 0045 // Mode: Fast PWM top=0xFF
                 ; 0000 0046 // OC0 output: Non-Inverted PWM
                 ; 0000 0047 // Timer Period: 5.9259 ms
                 ; 0000 0048 // Output Pulse(s):
                 ; 0000 0049 // OC0 Period: 5.9259 ms Width: 1.4873 ms
                 ; 0000 004A TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
00009b e6ec      	LDI  R30,LOW(108)
00009c bfe3      	OUT  0x33,R30
                 ; 0000 004B TCNT0=0x00;
00009d e0e0      	LDI  R30,LOW(0)
00009e bfe2      	OUT  0x32,R30
                 ; 0000 004C OCR0=0x40;
00009f e4e0      	LDI  R30,LOW(64)
0000a0 bfec      	OUT  0x3C,R30
                 ; 0000 004D 
                 ; 0000 004E // Timer/Counter 2 initialization
                 ; 0000 004F // Clock source: System Clock
                 ; 0000 0050 // Clock value: 10.800 kHz
                 ; 0000 0051 // Mode: CTC top=OCR2A
                 ; 0000 0052 // OC2 output: Toggle on compare match
                 ; 0000 0053 // Timer Period: 20 ms
                 ; 0000 0054 // Output Pulse(s):
                 ; 0000 0055 // OC2 Period: 40 ms Width: 20 ms
                 ; 0000 0056 ASSR=0<<AS2;
0000a1 e0e0      	LDI  R30,LOW(0)
0000a2 bde2      	OUT  0x22,R30
                 ; 0000 0057 TCCR2=(0<<PWM2) | (0<<COM21) | (1<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
0000a3 e1ef      	LDI  R30,LOW(31)
0000a4 bde5      	OUT  0x25,R30
                 ; 0000 0058 TCNT2=0x00;
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 bde4      	OUT  0x24,R30
                 ; 0000 0059 OCR2=0xD7;
0000a7 ede7      	LDI  R30,LOW(215)
0000a8 bde3      	OUT  0x23,R30
                 ; 0000 005A 
                 ; 0000 005B // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 005C TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a9 e0e0      	LDI  R30,LOW(0)
0000aa bfe9      	OUT  0x39,R30
                 ; 0000 005D 
                 ; 0000 005E 
                 ; 0000 005F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0060 // TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
                 ; 0000 0061 
                 ; 0000 0062 // USART initialization
                 ; 0000 0063 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0064 // USART Receiver: On
                 ; 0000 0065 // USART Transmitter: On
                 ; 0000 0066 // USART Mode: Asynchronous
                 ; 0000 0067 // USART Baud Rate: 9600
                 ; 0000 0068 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
0000ab b9eb      	OUT  0xB,R30
                 ; 0000 0069 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000ac e1e8      	LDI  R30,LOW(24)
0000ad b9ea      	OUT  0xA,R30
                 ; 0000 006A UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
0000ae e8e6      	LDI  R30,LOW(134)
0000af bde0      	OUT  0x20,R30
                 ; 0000 006B UBRRH=0x00;
0000b0 e0e0      	LDI  R30,LOW(0)
0000b1 bde0      	OUT  0x20,R30
                 ; 0000 006C UBRRL=0x47;
0000b2 e4e7      	LDI  R30,LOW(71)
0000b3 b9e9      	OUT  0x9,R30
                 ; 0000 006D 
                 ; 0000 006E     TCCR1A = 0;
0000b4 e0e0      	LDI  R30,LOW(0)
0000b5 bdef      	OUT  0x2F,R30
                 ; 0000 006F     TCNT1=0;
0000b6 e0e0      	LDI  R30,LOW(0)
0000b7 e0f0      	LDI  R31,HIGH(0)
0000b8 bdfd      	OUT  0x2C+1,R31
0000b9 bdec      	OUT  0x2C,R30
                 ; 0000 0070     do
                 _0x4:
                 ; 0000 0071     {
                 ; 0000 0072         TCCR1B = 0x42;
0000ba e4e2      	LDI  R30,LOW(66)
0000bb bdee      	OUT  0x2E,R30
                 ; 0000 0073         TIFR = (1<<ICF1);
0000bc e2e0      	LDI  R30,LOW(32)
0000bd bfe8      	OUT  0x38,R30
                 ; 0000 0074         while ((TIFR & (1<<ICF1)) == 0);
                 _0x6:
0000be b7e8      	IN   R30,0x38
0000bf ffe5      	SBRS R30,5
0000c0 cffd      	RJMP _0x6
                 ; 0000 0075         a = ICR1;
0000c1 940e 0587 	CALL SUBOPT_0x0
0000c3 018f      	MOVW R16,R30
                 ; 0000 0076 
                 ; 0000 0077         TCCR1B = 0x02;
0000c4 e0e2      	LDI  R30,LOW(2)
0000c5 bdee      	OUT  0x2E,R30
                 ; 0000 0078         TIFR = (1<<ICF1);
0000c6 e2e0      	LDI  R30,LOW(32)
0000c7 bfe8      	OUT  0x38,R30
                 ; 0000 0079         while ((TIFR & (1<<ICF1)) == 0);
                 _0x9:
0000c8 b7e8      	IN   R30,0x38
0000c9 ffe5      	SBRS R30,5
0000ca cffd      	RJMP _0x9
                 ; 0000 007A         b = ICR1;
0000cb 940e 0587 	CALL SUBOPT_0x0
0000cd 019f      	MOVW R18,R30
                 ; 0000 007B 
                 ; 0000 007C         TCCR1B = 0x42;
0000ce e4e2      	LDI  R30,LOW(66)
0000cf bdee      	OUT  0x2E,R30
                 ; 0000 007D         TIFR = (1<<ICF1);
0000d0 e2e0      	LDI  R30,LOW(32)
0000d1 bfe8      	OUT  0x38,R30
                 ; 0000 007E         while ((TIFR & (1<<ICF1)) == 0);
                 _0xC:
0000d2 b7e8      	IN   R30,0x38
0000d3 ffe5      	SBRS R30,5
0000d4 cffd      	RJMP _0xC
                 ; 0000 007F         c = ICR1;
0000d5 940e 0587 	CALL SUBOPT_0x0
0000d7 01af      	MOVW R20,R30
                 ; 0000 0080 
                 ; 0000 0081         TCCR1B = 0;
0000d8 e0e0      	LDI  R30,LOW(0)
0000d9 bdee      	OUT  0x2E,R30
                 ; 0000 0082         TIFR = (1<<ICF1);
0000da e2e0      	LDI  R30,LOW(32)
0000db bfe8      	OUT  0x38,R30
                 ; 0000 0083     }
                 ; 0000 0084     while(a>b || b>c );      // Check for valid condition, to avoid timer overflow reading
                +
0000dc 1720     +CP R18 , R16
0000dd 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
0000de f018      	BRLO _0xF
                +
0000df 1742     +CP R20 , R18
0000e0 0753     +CPC R21 , R19
                 	__CPWRR 20,21,18,19
0000e1 f408      	BRSH _0x5
                 _0xF:
0000e2 cfd7      	RJMP _0x4
                 _0x5:
                 ; 0000 0085 
                 ; 0000 0086     high= b-a;
0000e3 01f9      	MOVW R30,R18
0000e4 1be0      	SUB  R30,R16
0000e5 0bf1      	SBC  R31,R17
0000e6 2766      	CLR  R22
0000e7 2777      	CLR  R23
0000e8 940e 0703 	CALL __CDF1
0000ea 940e 058e 	CALL SUBOPT_0x1
                 ; 0000 0087     low = c-b;
0000ec 01fa      	MOVW R30,R20
0000ed 1be2      	SUB  R30,R18
0000ee 0bf3      	SBC  R31,R19
0000ef 2766      	CLR  R22
0000f0 2777      	CLR  R23
0000f1 940e 0703 	CALL __CDF1
0000f3 940e 0593 	CALL SUBOPT_0x2
                 ; 0000 0088     period = high + low;
0000f5 940e 0598 	CALL SUBOPT_0x3
0000f7 940e 059d 	CALL SUBOPT_0x4
0000f9 940e 073d 	CALL __ADDF12
                +
0000fb 87e8     +STD Y + 8 , R30
0000fc 87f9     +STD Y + 8 + 1 , R31
0000fd 876a     +STD Y + 8 + 2 , R22
0000fe 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0000 0089     printf("a: %u b: %u c: %u \r\n ", a, b, c);
                +
0000ff e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000100 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000101 93fa      	ST   -Y,R31
000102 93ea      	ST   -Y,R30
000103 01f8      	MOVW R30,R16
000104 940e 05a2 	CALL SUBOPT_0x5
000106 01f9      	MOVW R30,R18
000107 940e 05a2 	CALL SUBOPT_0x5
000109 01fa      	MOVW R30,R20
00010a 940e 05a2 	CALL SUBOPT_0x5
00010c e08c      	LDI  R24,12
00010d 940e 0453 	CALL _printf
00010f 962e      	ADIW R28,14
                 ; 0000 008A 
                 ; 0000 008B     freq = (float) (Timer1_CLK) / period;
                +
000110 85e8     +LDD R30 , Y + 8
000111 85f9     +LDD R31 , Y + 8 + 1
000112 856a     +LDD R22 , Y + 8 + 2
000113 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000114 e0a0     +LDI R26 , LOW ( 0x49A8C000 )
000115 ecb0     +LDI R27 , HIGH ( 0x49A8C000 )
000116 ea88     +LDI R24 , BYTE3 ( 0x49A8C000 )
000117 e499     +LDI R25 , BYTE4 ( 0x49A8C000 )
                 	__GETD2N 0x49A8C000
000118 940e 07db 	CALL __DIVF21
00011a 940e 05a7 	CALL SUBOPT_0x6
                 ; 0000 008C 
                 ; 0000 008D     printf("High: %f \r\n", high / (float) Timer1_CLK );
                +
00011c e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
00011d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
00011e 93fa      	ST   -Y,R31
00011f 93ea      	ST   -Y,R30
                +
000120 89aa     +LDD R26 , Y + 18
000121 89bb     +LDD R27 , Y + 18 + 1
000122 898c     +LDD R24 , Y + 18 + 2
000123 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
000124 940e 05ac 	CALL SUBOPT_0x7
                 ; 0000 008E     printf("Low: %f \r\n", low / (float) Timer1_CLK );
                +
000126 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
000127 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
000128 93fa      	ST   -Y,R31
000129 93ea      	ST   -Y,R30
                +
00012a 85ae     +LDD R26 , Y + 14
00012b 85bf     +LDD R27 , Y + 14 + 1
00012c 8988     +LDD R24 , Y + 14 + 2
00012d 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00012e 940e 05ac 	CALL SUBOPT_0x7
                 ; 0000 008F     printf("Period: %f \r\n", period / (float) Timer1_CLK );
                +
000130 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 45 ) )
000131 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW1FN _0x0,45
000132 93fa      	ST   -Y,R31
000133 93ea      	ST   -Y,R30
000134 940e 05b9 	CALL SUBOPT_0x8
000136 940e 05ac 	CALL SUBOPT_0x7
                 ; 0000 0090     duty_cycle =( high / period) * 100;
                +
000138 85e8     +LDD R30 , Y + 8
000139 85f9     +LDD R31 , Y + 8 + 1
00013a 856a     +LDD R22 , Y + 8 + 2
00013b 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00013c 940e 059d 	CALL SUBOPT_0x4
00013e 940e 07db 	CALL __DIVF21
                +
000140 e0a0     +LDI R26 , LOW ( 0x42C80000 )
000141 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
000142 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
000143 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
000144 940e 078d 	CALL __MULF12
000146 940e 08bf 	CALL __PUTD1S0
                 ; 0000 0091     printf("freq %f , Duty: %f % \r\n ", freq , duty_cycle);
                +
000148 e8ef     +LDI R30 , LOW ( 2 * _0x0 + ( 59 ) )
000149 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW1FN _0x0,59
00014a 93fa      	ST   -Y,R31
00014b 93ea      	ST   -Y,R30
00014c 940e 05be 	CALL SUBOPT_0x9
00014e 940e 05be 	CALL SUBOPT_0x9
000150 e088      	LDI  R24,8
000151 940e 0453 	CALL _printf
000153 962a      	ADIW R28,10
                 ; 0000 0092 
                 ; 0000 0093     while(1);
                 _0x11:
000154 cfff      	RJMP _0x11
                 ; 0000 0094 }
                 _0x14:
000155 cfff      	RJMP _0x14
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000156 93aa      	ST   -Y,R26
                 putchar0:
000157 9b5d           sbis usr,udre
000158 cffe           rjmp putchar0
000159 81e8           ld   r30,y
00015a b9ec           out  udr,r30
00015b 9621      	ADIW R28,1
00015c 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
00015d 93ba      	ST   -Y,R27
00015e 93aa      	ST   -Y,R26
00015f 81aa      	LDD  R26,Y+2
000160 dff5      	RCALL _putchar
000161 81a8      	LD   R26,Y
000162 81b9      	LDD  R27,Y+1
000163 91ed      	LD   R30,X+
000164 91fd      	LD   R31,X+
000165 9631      	ADIW R30,1
000166 93fe      	ST   -X,R31
000167 93ee      	ST   -X,R30
000168 9623      	ADIW R28,3
000169 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
00016a 940e 05c5 	CALL SUBOPT_0xA
00016c e8e0      	LDI  R30,LOW(128)
00016d 83ea      	STD  Y+2,R30
00016e e3ef      	LDI  R30,LOW(63)
00016f 83eb      	STD  Y+3,R30
000170 940e 08e1 	CALL __SAVELOCR4
000172 85ee      	LDD  R30,Y+14
000173 85ff      	LDD  R31,Y+14+1
000174 3fef      	CPI  R30,LOW(0xFFFF)
000175 efaf      	LDI  R26,HIGH(0xFFFF)
000176 07fa      	CPC  R31,R26
000177 f449      	BRNE _0x2000019
000178 85e8      	LDD  R30,Y+8
000179 85f9      	LDD  R31,Y+8+1
00017a 93fa      	ST   -Y,R31
00017b 93ea      	ST   -Y,R30
                +
00017c eaa8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00017d e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00017e 940e 0478 	CALL _strcpyf
000180 c0b5      	RJMP _0x20A0004
                 _0x2000019:
000181 3fef      	CPI  R30,LOW(0x7FFF)
000182 e7af      	LDI  R26,HIGH(0x7FFF)
000183 07fa      	CPC  R31,R26
000184 f449      	BRNE _0x2000018
000185 85e8      	LDD  R30,Y+8
000186 85f9      	LDD  R31,Y+8+1
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
                +
000189 eaa9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00018a e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00018b 940e 0478 	CALL _strcpyf
00018d c0a8      	RJMP _0x20A0004
                 _0x2000018:
00018e 85ab      	LDD  R26,Y+11
00018f 30a7      	CPI  R26,LOW(0x7)
000190 f010      	BRLO _0x200001B
000191 e0e6      	LDI  R30,LOW(6)
000192 87eb      	STD  Y+11,R30
                 _0x200001B:
000193 851b      	LDD  R17,Y+11
                 _0x200001C:
000194 2fe1      	MOV  R30,R17
000195 5011      	SUBI R17,1
000196 30e0      	CPI  R30,0
000197 f019      	BREQ _0x200001E
000198 940e 05cc 	CALL SUBOPT_0xB
00019a cff9      	RJMP _0x200001C
                 _0x200001E:
00019b 940e 0598 	CALL SUBOPT_0x3
00019d 940e 08db 	CALL __CPD10
00019f f421      	BRNE _0x200001F
0001a0 e030      	LDI  R19,LOW(0)
0001a1 940e 05cc 	CALL SUBOPT_0xB
0001a3 c02b      	RJMP _0x2000020
                 _0x200001F:
0001a4 853b      	LDD  R19,Y+11
0001a5 940e 05d7 	CALL SUBOPT_0xC
0001a7 f009      	BREQ PC+2
0001a8 f408      	BRCC PC+2
0001a9 c00b      	RJMP _0x2000021
0001aa 940e 05cc 	CALL SUBOPT_0xB
                 _0x2000022:
0001ac 940e 05d7 	CALL SUBOPT_0xC
0001ae f028      	BRLO _0x2000024
0001af 940e 05e2 	CALL SUBOPT_0xD
0001b1 940e 05e7 	CALL SUBOPT_0xE
0001b3 cff8      	RJMP _0x2000022
                 _0x2000024:
0001b4 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0001b5 940e 05d7 	CALL SUBOPT_0xC
0001b7 f440      	BRSH _0x2000028
0001b8 940e 05e2 	CALL SUBOPT_0xD
0001ba 940e 05f0 	CALL SUBOPT_0xF
0001bc 940e 0593 	CALL SUBOPT_0x2
0001be 5031      	SUBI R19,LOW(1)
0001bf cff5      	RJMP _0x2000026
                 _0x2000028:
0001c0 940e 05cc 	CALL SUBOPT_0xB
                 _0x2000025:
0001c2 940e 0598 	CALL SUBOPT_0x3
0001c4 940e 05f7 	CALL SUBOPT_0x10
0001c6 940e 0593 	CALL SUBOPT_0x2
0001c8 940e 05d7 	CALL SUBOPT_0xC
0001ca f020      	BRLO _0x2000029
0001cb 940e 05e2 	CALL SUBOPT_0xD
0001cd 940e 05e7 	CALL SUBOPT_0xE
                 _0x2000029:
                 _0x2000020:
0001cf e010      	LDI  R17,LOW(0)
                 _0x200002A:
0001d0 85eb      	LDD  R30,Y+11
0001d1 17e1      	CP   R30,R17
0001d2 f1b8      	BRLO _0x200002C
                +
0001d3 81ac     +LDD R26 , Y + 4
0001d4 81bd     +LDD R27 , Y + 4 + 1
0001d5 818e     +LDD R24 , Y + 4 + 2
0001d6 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001d7 940e 05fe 	CALL SUBOPT_0x11
0001d9 940e 05f7 	CALL SUBOPT_0x10
0001db 01df      	MOVW R26,R30
0001dc 01cb      	MOVW R24,R22
0001dd 940e 04cf 	CALL _floor
0001df 940e 05a7 	CALL SUBOPT_0x6
                +
0001e1 81ec     +LDD R30 , Y + 4
0001e2 81fd     +LDD R31 , Y + 4 + 1
0001e3 816e     +LDD R22 , Y + 4 + 2
0001e4 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0001e5 940e 05e2 	CALL SUBOPT_0xD
0001e7 940e 07db 	CALL __DIVF21
0001e9 940e 06ca 	CALL __CFD1U
0001eb 2f0e      	MOV  R16,R30
0001ec 940e 0605 	CALL SUBOPT_0x12
0001ee 940e 060c 	CALL SUBOPT_0x13
0001f0 27ff      	CLR  R31
0001f1 2766      	CLR  R22
0001f2 2777      	CLR  R23
0001f3 940e 0703 	CALL __CDF1
                +
0001f5 81ac     +LDD R26 , Y + 4
0001f6 81bd     +LDD R27 , Y + 4 + 1
0001f7 818e     +LDD R24 , Y + 4 + 2
0001f8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001f9 940e 078d 	CALL __MULF12
0001fb 940e 05e2 	CALL SUBOPT_0xD
0001fd 940e 0611 	CALL SUBOPT_0x14
0001ff 940e 0593 	CALL SUBOPT_0x2
000201 2fe1      	MOV  R30,R17
000202 5f1f      	SUBI R17,-1
000203 30e0      	CPI  R30,0
000204 f659      	BRNE _0x200002A
000205 940e 0605 	CALL SUBOPT_0x12
000207 e2ee      	LDI  R30,LOW(46)
000208 93ec      	ST   X,R30
000209 cfc6      	RJMP _0x200002A
                 _0x200002C:
00020a 940e 0616 	CALL SUBOPT_0x15
00020c 9731      	SBIW R30,1
00020d 85aa      	LDD  R26,Y+10
00020e 83a0      	STD  Z+0,R26
00020f 3030      	CPI  R19,0
000210 f42c      	BRGE _0x200002E
000211 9531      	NEG  R19
000212 85a8      	LDD  R26,Y+8
000213 85b9      	LDD  R27,Y+8+1
000214 e2ed      	LDI  R30,LOW(45)
000215 c003      	RJMP _0x2000113
                 _0x200002E:
000216 85a8      	LDD  R26,Y+8
000217 85b9      	LDD  R27,Y+8+1
000218 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
000219 93ec      	ST   X,R30
00021a 940e 0616 	CALL SUBOPT_0x15
00021c 940e 0616 	CALL SUBOPT_0x15
00021e 9731      	SBIW R30,1
00021f 01bf      	MOVW R22,R30
000220 2fa3      	MOV  R26,R19
000221 e0ea      	LDI  R30,LOW(10)
000222 940e 0865 	CALL __DIVB21
000224 5de0      	SUBI R30,-LOW(48)
000225 01db      	MOVW R26,R22
000226 93ec      	ST   X,R30
000227 940e 0616 	CALL SUBOPT_0x15
000229 9731      	SBIW R30,1
00022a 01bf      	MOVW R22,R30
00022b 2fa3      	MOV  R26,R19
00022c e0ea      	LDI  R30,LOW(10)
00022d 940e 088f 	CALL __MODB21
00022f 5de0      	SUBI R30,-LOW(48)
000230 01db      	MOVW R26,R22
000231 93ec      	ST   X,R30
000232 85a8      	LDD  R26,Y+8
000233 85b9      	LDD  R27,Y+8+1
000234 e0e0      	LDI  R30,LOW(0)
000235 93ec      	ST   X,R30
                 _0x20A0004:
000236 940e 08e8 	CALL __LOADLOCR4
000238 9660      	ADIW R28,16
000239 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00023a 93ba      	ST   -Y,R27
00023b 93aa      	ST   -Y,R26
00023c 97ef      	SBIW R28,63
00023d 9761      	SBIW R28,17
00023e 940e 08df 	CALL __SAVELOCR6
000240 e010      	LDI  R17,0
                +
000241 01fe     +MOVW R30 , R28
000242 5ae8     +SUBI R30 , LOW ( - 88 )
000243 4fff     +SBCI R31 , HIGH ( - 88 )
000244 9001     +LD R0 , Z +
000245 81f0     +LD R31 , Z
000246 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000247 87e8      	STD  Y+8,R30
000248 87f9      	STD  Y+8+1,R31
                +
000249 01fe     +MOVW R30 , R28
00024a 5aea     +SUBI R30 , LOW ( - 86 )
00024b 4fff     +SBCI R31 , HIGH ( - 86 )
00024c 9001     +LD R0 , Z +
00024d 81f0     +LD R31 , Z
00024e 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00024f 83ee      	STD  Y+6,R30
000250 83ff      	STD  Y+6+1,R31
000251 81ae      	LDD  R26,Y+6
000252 81bf      	LDD  R27,Y+6+1
000253 e0e0      	LDI  R30,LOW(0)
000254 e0f0      	LDI  R31,HIGH(0)
000255 93ed      	ST   X+,R30
000256 93fc      	ST   X,R31
                 _0x2000030:
000257 01de      	MOVW R26,R28
000258 5aa4      	SUBI R26,LOW(-(92))
000259 4fbf      	SBCI R27,HIGH(-(92))
00025a 91ed      	LD   R30,X+
00025b 91fd      	LD   R31,X+
00025c 9631      	ADIW R30,1
00025d 93fe      	ST   -X,R31
00025e 93ee      	ST   -X,R30
00025f 9731      	SBIW R30,1
000260 91e4      	LPM  R30,Z
000261 2f2e      	MOV  R18,R30
000262 30e0      	CPI  R30,0
000263 f409      	BRNE PC+2
000264 c1e5      	RJMP _0x2000032
000265 2fe1      	MOV  R30,R17
000266 30e0      	CPI  R30,0
000267 f439      	BRNE _0x2000036
000268 3225      	CPI  R18,37
000269 f411      	BRNE _0x2000037
00026a e011      	LDI  R17,LOW(1)
00026b c002      	RJMP _0x2000038
                 _0x2000037:
00026c 940e 061c 	CALL SUBOPT_0x16
                 _0x2000038:
00026e c1da      	RJMP _0x2000035
                 _0x2000036:
00026f 30e1      	CPI  R30,LOW(0x1)
000270 f4c1      	BRNE _0x2000039
000271 3225      	CPI  R18,37
000272 f419      	BRNE _0x200003A
000273 940e 061c 	CALL SUBOPT_0x16
000275 c1d2      	RJMP _0x2000114
                 _0x200003A:
000276 e012      	LDI  R17,LOW(2)
000277 e0e0      	LDI  R30,LOW(0)
000278 8bed      	STD  Y+21,R30
000279 e000      	LDI  R16,LOW(0)
00027a 322d      	CPI  R18,45
00027b f411      	BRNE _0x200003B
00027c e001      	LDI  R16,LOW(1)
00027d c1cb      	RJMP _0x2000035
                 _0x200003B:
00027e 322b      	CPI  R18,43
00027f f419      	BRNE _0x200003C
000280 e2eb      	LDI  R30,LOW(43)
000281 8bed      	STD  Y+21,R30
000282 c1c6      	RJMP _0x2000035
                 _0x200003C:
000283 3220      	CPI  R18,32
000284 f419      	BRNE _0x200003D
000285 e2e0      	LDI  R30,LOW(32)
000286 8bed      	STD  Y+21,R30
000287 c1c1      	RJMP _0x2000035
                 _0x200003D:
000288 c002      	RJMP _0x200003E
                 _0x2000039:
000289 30e2      	CPI  R30,LOW(0x2)
00028a f439      	BRNE _0x200003F
                 _0x200003E:
00028b e050      	LDI  R21,LOW(0)
00028c e013      	LDI  R17,LOW(3)
00028d 3320      	CPI  R18,48
00028e f411      	BRNE _0x2000040
00028f 6800      	ORI  R16,LOW(128)
000290 c1b8      	RJMP _0x2000035
                 _0x2000040:
000291 c002      	RJMP _0x2000041
                 _0x200003F:
000292 30e3      	CPI  R30,LOW(0x3)
000293 f491      	BRNE _0x2000042
                 _0x2000041:
000294 3320      	CPI  R18,48
000295 f010      	BRLO _0x2000044
000296 332a      	CPI  R18,58
000297 f008      	BRLO _0x2000045
                 _0x2000044:
000298 c007      	RJMP _0x2000043
                 _0x2000045:
000299 e0aa      	LDI  R26,LOW(10)
00029a 9f5a      	MUL  R21,R26
00029b 2d50      	MOV  R21,R0
00029c 2fe2      	MOV  R30,R18
00029d 53e0      	SUBI R30,LOW(48)
00029e 0f5e      	ADD  R21,R30
00029f c1a9      	RJMP _0x2000035
                 _0x2000043:
0002a0 e040      	LDI  R20,LOW(0)
0002a1 322e      	CPI  R18,46
0002a2 f411      	BRNE _0x2000046
0002a3 e014      	LDI  R17,LOW(4)
0002a4 c1a4      	RJMP _0x2000035
                 _0x2000046:
0002a5 c00f      	RJMP _0x2000047
                 _0x2000042:
0002a6 30e4      	CPI  R30,LOW(0x4)
0002a7 f499      	BRNE _0x2000049
0002a8 3320      	CPI  R18,48
0002a9 f010      	BRLO _0x200004B
0002aa 332a      	CPI  R18,58
0002ab f008      	BRLO _0x200004C
                 _0x200004B:
0002ac c008      	RJMP _0x200004A
                 _0x200004C:
0002ad 6200      	ORI  R16,LOW(32)
0002ae e0aa      	LDI  R26,LOW(10)
0002af 9f4a      	MUL  R20,R26
0002b0 2d40      	MOV  R20,R0
0002b1 2fe2      	MOV  R30,R18
0002b2 53e0      	SUBI R30,LOW(48)
0002b3 0f4e      	ADD  R20,R30
0002b4 c194      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0002b5 362c      	CPI  R18,108
0002b6 f419      	BRNE _0x200004D
0002b7 6002      	ORI  R16,LOW(2)
0002b8 e015      	LDI  R17,LOW(5)
0002b9 c18f      	RJMP _0x2000035
                 _0x200004D:
0002ba c003      	RJMP _0x200004E
                 _0x2000049:
0002bb 30e5      	CPI  R30,LOW(0x5)
0002bc f009      	BREQ PC+2
0002bd c18b      	RJMP _0x2000035
                 _0x200004E:
0002be 2fe2      	MOV  R30,R18
0002bf 36e3      	CPI  R30,LOW(0x63)
0002c0 f459      	BRNE _0x2000053
0002c1 940e 0623 	CALL SUBOPT_0x17
0002c3 940e 062a 	CALL SUBOPT_0x18
0002c5 940e 0623 	CALL SUBOPT_0x17
0002c7 81a4      	LDD  R26,Z+4
0002c8 93aa      	ST   -Y,R26
0002c9 940e 0631 	CALL SUBOPT_0x19
0002cb c17c      	RJMP _0x2000054
                 _0x2000053:
0002cc 34e5      	CPI  R30,LOW(0x45)
0002cd f011      	BREQ _0x2000057
0002ce 36e5      	CPI  R30,LOW(0x65)
0002cf f409      	BRNE _0x2000058
                 _0x2000057:
0002d0 c003      	RJMP _0x2000059
                 _0x2000058:
0002d1 36e6      	CPI  R30,LOW(0x66)
0002d2 f009      	BREQ PC+2
0002d3 c048      	RJMP _0x200005A
                 _0x2000059:
0002d4 01fe      	MOVW R30,R28
0002d5 9676      	ADIW R30,22
0002d6 87ee      	STD  Y+14,R30
0002d7 87ff      	STD  Y+14+1,R31
0002d8 940e 0637 	CALL SUBOPT_0x1A
0002da 940e 08af 	CALL __GETD1P
0002dc 940e 063e 	CALL SUBOPT_0x1B
0002de 940e 0643 	CALL SUBOPT_0x1C
0002e0 85ad      	LDD  R26,Y+13
0002e1 23aa      	TST  R26
0002e2 f032      	BRMI _0x200005B
0002e3 89ad      	LDD  R26,Y+21
0002e4 32ab      	CPI  R26,LOW(0x2B)
0002e5 f059      	BREQ _0x200005D
0002e6 32a0      	CPI  R26,LOW(0x20)
0002e7 f081      	BREQ _0x200005F
0002e8 c017      	RJMP _0x2000060
                 _0x200005B:
0002e9 940e 0645 	CALL SUBOPT_0x1D
0002eb 940e 0697 	CALL __ANEGF1
0002ed 940e 063e 	CALL SUBOPT_0x1B
0002ef e2ed      	LDI  R30,LOW(45)
0002f0 8bed      	STD  Y+21,R30
                 _0x200005D:
0002f1 ff07      	SBRS R16,7
0002f2 c005      	RJMP _0x2000061
0002f3 89ed      	LDD  R30,Y+21
0002f4 93ea      	ST   -Y,R30
0002f5 940e 0631 	CALL SUBOPT_0x19
0002f7 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
0002f8 85ee      	LDD  R30,Y+14
0002f9 85ff      	LDD  R31,Y+14+1
0002fa 9631      	ADIW R30,1
0002fb 87ee      	STD  Y+14,R30
0002fc 87ff      	STD  Y+14+1,R31
0002fd 9731      	SBIW R30,1
0002fe 89ad      	LDD  R26,Y+21
0002ff 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000300 ff05      	SBRS R16,5
000301 e046      	LDI  R20,LOW(6)
000302 3626      	CPI  R18,102
000303 f451      	BRNE _0x2000064
000304 940e 0645 	CALL SUBOPT_0x1D
000306 940e 08c4 	CALL __PUTPARD1
000308 934a      	ST   -Y,R20
000309 89ab      	LDD  R26,Y+19
00030a 89bc      	LDD  R27,Y+19+1
00030b 940e 04e6 	CALL _ftoa
00030d c009      	RJMP _0x2000065
                 _0x2000064:
00030e 940e 0645 	CALL SUBOPT_0x1D
000310 940e 08c4 	CALL __PUTPARD1
000312 934a      	ST   -Y,R20
000313 932a      	ST   -Y,R18
000314 89ac      	LDD  R26,Y+20
000315 89bd      	LDD  R27,Y+20+1
000316 de53      	RCALL __ftoe_G100
                 _0x2000065:
000317 01fe      	MOVW R30,R28
000318 9676      	ADIW R30,22
000319 940e 064a 	CALL SUBOPT_0x1E
00031b c01e      	RJMP _0x2000066
                 _0x200005A:
00031c 37e3      	CPI  R30,LOW(0x73)
00031d f439      	BRNE _0x2000068
00031e 940e 0643 	CALL SUBOPT_0x1C
000320 940e 0652 	CALL SUBOPT_0x1F
000322 940e 064a 	CALL SUBOPT_0x1E
000324 c00e      	RJMP _0x2000069
                 _0x2000068:
000325 37e0      	CPI  R30,LOW(0x70)
000326 f4c1      	BRNE _0x200006B
000327 940e 0643 	CALL SUBOPT_0x1C
000329 940e 0652 	CALL SUBOPT_0x1F
00032b 87ee      	STD  Y+14,R30
00032c 87ff      	STD  Y+14+1,R31
00032d 85ae      	LDD  R26,Y+14
00032e 85bf      	LDD  R27,Y+14+1
00032f 940e 0491 	CALL _strlenf
000331 2f1e      	MOV  R17,R30
000332 6008      	ORI  R16,LOW(8)
                 _0x2000069:
000333 770f      	ANDI R16,LOW(127)
000334 3040      	CPI  R20,0
000335 f011      	BREQ _0x200006D
000336 1741      	CP   R20,R17
000337 f008      	BRLO _0x200006E
                 _0x200006D:
000338 c001      	RJMP _0x200006C
                 _0x200006E:
000339 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
00033a e040      	LDI  R20,LOW(0)
00033b e0e0      	LDI  R30,LOW(0)
00033c 8bec      	STD  Y+20,R30
00033d e030      	LDI  R19,LOW(0)
00033e c06d      	RJMP _0x200006F
                 _0x200006B:
00033f 36e4      	CPI  R30,LOW(0x64)
000340 f011      	BREQ _0x2000072
000341 36e9      	CPI  R30,LOW(0x69)
000342 f411      	BRNE _0x2000073
                 _0x2000072:
000343 6004      	ORI  R16,LOW(4)
000344 c002      	RJMP _0x2000074
                 _0x2000073:
000345 37e5      	CPI  R30,LOW(0x75)
000346 f4a1      	BRNE _0x2000075
                 _0x2000074:
000347 e0ea      	LDI  R30,LOW(10)
000348 8bec      	STD  Y+20,R30
000349 ff01      	SBRS R16,1
00034a c008      	RJMP _0x2000076
                +
00034b e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00034c ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00034d e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00034e e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00034f 940e 058e 	CALL SUBOPT_0x1
000351 e01a      	LDI  R17,LOW(10)
000352 c022      	RJMP _0x2000077
                 _0x2000076:
                +
000353 e1e0     +LDI R30 , LOW ( 0x2710 )
000354 e2f7     +LDI R31 , HIGH ( 0x2710 )
000355 e060     +LDI R22 , BYTE3 ( 0x2710 )
000356 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000357 940e 058e 	CALL SUBOPT_0x1
000359 e015      	LDI  R17,LOW(5)
00035a c01a      	RJMP _0x2000077
                 _0x2000075:
00035b 35e8      	CPI  R30,LOW(0x58)
00035c f411      	BRNE _0x2000079
00035d 6008      	ORI  R16,LOW(8)
00035e c003      	RJMP _0x200007A
                 _0x2000079:
00035f 37e8      	CPI  R30,LOW(0x78)
000360 f009      	BREQ PC+2
000361 c0e6      	RJMP _0x20000B8
                 _0x200007A:
000362 e1e0      	LDI  R30,LOW(16)
000363 8bec      	STD  Y+20,R30
000364 ff01      	SBRS R16,1
000365 c008      	RJMP _0x200007C
                +
000366 e0e0     +LDI R30 , LOW ( 0x10000000 )
000367 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000368 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000369 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00036a 940e 058e 	CALL SUBOPT_0x1
00036c e018      	LDI  R17,LOW(8)
00036d c007      	RJMP _0x2000077
                 _0x200007C:
                +
00036e e0e0     +LDI R30 , LOW ( 0x1000 )
00036f e1f0     +LDI R31 , HIGH ( 0x1000 )
000370 e060     +LDI R22 , BYTE3 ( 0x1000 )
000371 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000372 940e 058e 	CALL SUBOPT_0x1
000374 e014      	LDI  R17,LOW(4)
                 _0x2000077:
000375 3040      	CPI  R20,0
000376 f011      	BREQ _0x200007D
000377 770f      	ANDI R16,LOW(127)
000378 c001      	RJMP _0x200007E
                 _0x200007D:
000379 e041      	LDI  R20,LOW(1)
                 _0x200007E:
00037a ff01      	SBRS R16,1
00037b c008      	RJMP _0x200007F
00037c 940e 0643 	CALL SUBOPT_0x1C
00037e 940e 0637 	CALL SUBOPT_0x1A
000380 9614      	ADIW R26,4
000381 940e 08af 	CALL __GETD1P
000383 c00f      	RJMP _0x2000115
                 _0x200007F:
000384 ff02      	SBRS R16,2
000385 c007      	RJMP _0x2000081
000386 940e 0643 	CALL SUBOPT_0x1C
000388 940e 0652 	CALL SUBOPT_0x1F
00038a 940e 0852 	CALL __CWD1
00038c c006      	RJMP _0x2000115
                 _0x2000081:
00038d 940e 0643 	CALL SUBOPT_0x1C
00038f 940e 0652 	CALL SUBOPT_0x1F
000391 2766      	CLR  R22
000392 2777      	CLR  R23
                 _0x2000115:
                +
000393 87ea     +STD Y + 10 , R30
000394 87fb     +STD Y + 10 + 1 , R31
000395 876c     +STD Y + 10 + 2 , R22
000396 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000397 ff02      	SBRS R16,2
000398 c012      	RJMP _0x2000083
000399 85ad      	LDD  R26,Y+13
00039a 23aa      	TST  R26
00039b f442      	BRPL _0x2000084
00039c 940e 0645 	CALL SUBOPT_0x1D
00039e 940e 0844 	CALL __ANEGD1
0003a0 940e 063e 	CALL SUBOPT_0x1B
0003a2 e2ed      	LDI  R30,LOW(45)
0003a3 8bed      	STD  Y+21,R30
                 _0x2000084:
0003a4 89ed      	LDD  R30,Y+21
0003a5 30e0      	CPI  R30,0
0003a6 f019      	BREQ _0x2000085
0003a7 5f1f      	SUBI R17,-LOW(1)
0003a8 5f4f      	SUBI R20,-LOW(1)
0003a9 c001      	RJMP _0x2000086
                 _0x2000085:
0003aa 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
0003ab 2f34      	MOV  R19,R20
                 _0x200006F:
0003ac fd00      	SBRC R16,0
0003ad c014      	RJMP _0x2000087
                 _0x2000088:
0003ae 1715      	CP   R17,R21
0003af f410      	BRSH _0x200008B
0003b0 1735      	CP   R19,R21
0003b1 f008      	BRLO _0x200008C
                 _0x200008B:
0003b2 c00f      	RJMP _0x200008A
                 _0x200008C:
0003b3 ff07      	SBRS R16,7
0003b4 c008      	RJMP _0x200008D
0003b5 ff02      	SBRS R16,2
0003b6 c004      	RJMP _0x200008E
0003b7 7f0b      	ANDI R16,LOW(251)
0003b8 892d      	LDD  R18,Y+21
0003b9 5011      	SUBI R17,LOW(1)
0003ba c001      	RJMP _0x200008F
                 _0x200008E:
0003bb e320      	LDI  R18,LOW(48)
                 _0x200008F:
0003bc c001      	RJMP _0x2000090
                 _0x200008D:
0003bd e220      	LDI  R18,LOW(32)
                 _0x2000090:
0003be 940e 061c 	CALL SUBOPT_0x16
0003c0 5051      	SUBI R21,LOW(1)
0003c1 cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
0003c2 1714      	CP   R17,R20
0003c3 f490      	BRSH _0x2000093
0003c4 6100      	ORI  R16,LOW(16)
0003c5 ff02      	SBRS R16,2
0003c6 c006      	RJMP _0x2000094
0003c7 940e 0657 	CALL SUBOPT_0x20
0003c9 f009      	BREQ _0x2000095
0003ca 5051      	SUBI R21,LOW(1)
                 _0x2000095:
0003cb 5011      	SUBI R17,LOW(1)
0003cc 5041      	SUBI R20,LOW(1)
                 _0x2000094:
0003cd e3e0      	LDI  R30,LOW(48)
0003ce 93ea      	ST   -Y,R30
0003cf 940e 0631 	CALL SUBOPT_0x19
0003d1 3050      	CPI  R21,0
0003d2 f009      	BREQ _0x2000096
0003d3 5051      	SUBI R21,LOW(1)
                 _0x2000096:
0003d4 5041      	SUBI R20,LOW(1)
0003d5 cfec      	RJMP _0x2000091
                 _0x2000093:
0003d6 2f31      	MOV  R19,R17
0003d7 89ec      	LDD  R30,Y+20
0003d8 30e0      	CPI  R30,0
0003d9 f4b9      	BRNE _0x2000097
                 _0x2000098:
0003da 3030      	CPI  R19,0
0003db f0a1      	BREQ _0x200009A
0003dc ff03      	SBRS R16,3
0003dd c006      	RJMP _0x200009B
0003de 85ee      	LDD  R30,Y+14
0003df 85ff      	LDD  R31,Y+14+1
0003e0 9125      	LPM  R18,Z+
0003e1 87ee      	STD  Y+14,R30
0003e2 87ff      	STD  Y+14+1,R31
0003e3 c005      	RJMP _0x200009C
                 _0x200009B:
0003e4 85ae      	LDD  R26,Y+14
0003e5 85bf      	LDD  R27,Y+14+1
0003e6 912d      	LD   R18,X+
0003e7 87ae      	STD  Y+14,R26
0003e8 87bf      	STD  Y+14+1,R27
                 _0x200009C:
0003e9 940e 061c 	CALL SUBOPT_0x16
0003eb 3050      	CPI  R21,0
0003ec f009      	BREQ _0x200009D
0003ed 5051      	SUBI R21,LOW(1)
                 _0x200009D:
0003ee 5031      	SUBI R19,LOW(1)
0003ef cfea      	RJMP _0x2000098
                 _0x200009A:
0003f0 c04d      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
0003f1 940e 0669 	CALL SUBOPT_0x21
0003f3 940e 086a 	CALL __DIVD21U
0003f5 2f2e      	MOV  R18,R30
0003f6 302a      	CPI  R18,10
0003f7 f030      	BRLO _0x20000A2
0003f8 ff03      	SBRS R16,3
0003f9 c002      	RJMP _0x20000A3
0003fa 5c29      	SUBI R18,-LOW(55)
0003fb c001      	RJMP _0x20000A4
                 _0x20000A3:
0003fc 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
0003fd c001      	RJMP _0x20000A5
                 _0x20000A2:
0003fe 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
0003ff fd04      	SBRC R16,4
000400 c01f      	RJMP _0x20000A7
000401 3321      	CPI  R18,49
000402 f450      	BRSH _0x20000A9
000403 940e 059d 	CALL SUBOPT_0x4
                +
000405 30a1     +CPI R26 , LOW ( 0x1 )
000406 e0e0     +LDI R30 , HIGH ( 0x1 )
000407 07be     +CPC R27 , R30
000408 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000409 078e     +CPC R24 , R30
00040a e0e0     +LDI R30 , BYTE4 ( 0x1 )
00040b 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00040c f409      	BRNE _0x20000A8
                 _0x20000A9:
00040d c00b      	RJMP _0x20000AB
                 _0x20000A8:
00040e 1743      	CP   R20,R19
00040f f440      	BRSH _0x2000116
000410 1753      	CP   R21,R19
000411 f010      	BRLO _0x20000AE
000412 ff00      	SBRS R16,0
000413 c001      	RJMP _0x20000AF
                 _0x20000AE:
000414 c010      	RJMP _0x20000AD
                 _0x20000AF:
000415 e220      	LDI  R18,LOW(32)
000416 ff07      	SBRS R16,7
000417 c008      	RJMP _0x20000B0
                 _0x2000116:
000418 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
000419 6100      	ORI  R16,LOW(16)
00041a ff02      	SBRS R16,2
00041b c004      	RJMP _0x20000B1
00041c 940e 0657 	CALL SUBOPT_0x20
00041e f009      	BREQ _0x20000B2
00041f 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
000420 940e 061c 	CALL SUBOPT_0x16
000422 3050      	CPI  R21,0
000423 f009      	BREQ _0x20000B3
000424 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000425 5031      	SUBI R19,LOW(1)
000426 940e 0669 	CALL SUBOPT_0x21
000428 940e 089b 	CALL __MODD21U
00042a 940e 063e 	CALL SUBOPT_0x1B
00042c 89ec      	LDD  R30,Y+20
00042d 940e 059d 	CALL SUBOPT_0x4
00042f 27ff      	CLR  R31
000430 2766      	CLR  R22
000431 2777      	CLR  R23
000432 940e 086a 	CALL __DIVD21U
000434 940e 058e 	CALL SUBOPT_0x1
                +
000436 89e8     +LDD R30 , Y + 16
000437 89f9     +LDD R31 , Y + 16 + 1
000438 896a     +LDD R22 , Y + 16 + 2
000439 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00043a 940e 08db 	CALL __CPD10
00043c f009      	BREQ _0x20000A1
00043d cfb3      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
00043e ff00      	SBRS R16,0
00043f c008      	RJMP _0x20000B4
                 _0x20000B5:
000440 3050      	CPI  R21,0
000441 f031      	BREQ _0x20000B7
000442 5051      	SUBI R21,LOW(1)
000443 e2e0      	LDI  R30,LOW(32)
000444 93ea      	ST   -Y,R30
000445 940e 0631 	CALL SUBOPT_0x19
000447 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000448 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000449 ce0d      	RJMP _0x2000030
                 _0x2000032:
00044a 81ae      	LDD  R26,Y+6
00044b 81bf      	LDD  R27,Y+6+1
00044c 940e 08ab 	CALL __GETW1P
00044e 940e 08e6 	CALL __LOADLOCR6
000450 96ef      	ADIW R28,63
000451 966f      	ADIW R28,31
000452 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000453 92ff      	PUSH R15
000454 2ef8      	MOV  R15,R24
000455 9726      	SBIW R28,6
000456 931a      	ST   -Y,R17
000457 930a      	ST   -Y,R16
000458 01de      	MOVW R26,R28
000459 9614      	ADIW R26,4
00045a 940e 0840 	CALL __ADDW2R15
00045c 018d      	MOVW R16,R26
00045d e0e0      	LDI  R30,LOW(0)
00045e 83ec      	STD  Y+4,R30
00045f 83ed      	STD  Y+4+1,R30
000460 83ee      	STD  Y+6,R30
000461 83ef      	STD  Y+6+1,R30
000462 01de      	MOVW R26,R28
000463 9618      	ADIW R26,8
000464 940e 0840 	CALL __ADDW2R15
000466 940e 08ab 	CALL __GETW1P
000468 93fa      	ST   -Y,R31
000469 93ea      	ST   -Y,R30
00046a 931a      	ST   -Y,R17
00046b 930a      	ST   -Y,R16
00046c e5ed      	LDI  R30,LOW(_put_usart_G100)
00046d e0f1      	LDI  R31,HIGH(_put_usart_G100)
00046e 93fa      	ST   -Y,R31
00046f 93ea      	ST   -Y,R30
000470 01de      	MOVW R26,R28
000471 9618      	ADIW R26,8
000472 ddc7      	RCALL __print_G100
000473 8119      	LDD  R17,Y+1
000474 8108      	LDD  R16,Y+0
000475 9628      	ADIW R28,8
000476 90ff      	POP  R15
000477 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000478 93ba      	ST   -Y,R27
000479 93aa      	ST   -Y,R26
00047a 91e9          ld   r30,y+
00047b 91f9          ld   r31,y+
00047c 91a9          ld   r26,y+
00047d 91b9          ld   r27,y+
00047e 01cd          movw r24,r26
                 strcpyf0:
00047f 9005      	lpm  r0,z+
000480 920d          st   x+,r0
000481 2000          tst  r0
000482 f7e1          brne strcpyf0
000483 01fc          movw r30,r24
000484 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000485 93ba      	ST   -Y,R27
000486 93aa      	ST   -Y,R26
000487 91a9          ld   r26,y+
000488 91b9          ld   r27,y+
000489 27ee          clr  r30
00048a 27ff          clr  r31
                 strlen0:
00048b 916d          ld   r22,x+
00048c 2366          tst  r22
00048d f011          breq strlen1
00048e 9631          adiw r30,1
00048f cffb          rjmp strlen0
                 strlen1:
000490 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000491 93ba      	ST   -Y,R27
000492 93aa      	ST   -Y,R26
000493 27aa          clr  r26
000494 27bb          clr  r27
000495 91e9          ld   r30,y+
000496 91f9          ld   r31,y+
                 strlenf0:
000497 9005      	lpm  r0,z+
000498 2000          tst  r0
000499 f011          breq strlenf1
00049a 9611          adiw r26,1
00049b cffb          rjmp strlenf0
                 strlenf1:
00049c 01fd          movw r30,r26
00049d 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00049e 940e 08c9 	CALL __PUTPARD2
0004a0 817b         ldd  r23,y+3
0004a1 816a         ldd  r22,y+2
0004a2 81f9         ldd  r31,y+1
0004a3 81e8         ld   r30,y
0004a4 fb77         bst  r23,7
0004a5 0f77         lsl  r23
0004a6 fd67         sbrc r22,7
0004a7 6071         sbr  r23,1
0004a8 2f97         mov  r25,r23
0004a9 579e         subi r25,0x7e
0004aa f081         breq __ftrunc0
0004ab f078         brcs __ftrunc0
0004ac 3198         cpi  r25,24
0004ad f490         brsh __ftrunc1
0004ae 27aa         clr  r26
0004af 27bb         clr  r27
0004b0 2788         clr  r24
                 __ftrunc2:
0004b1 9408         sec
0004b2 9587         ror  r24
0004b3 95b7         ror  r27
0004b4 95a7         ror  r26
0004b5 959a         dec  r25
0004b6 f7d1         brne __ftrunc2
0004b7 23ea         and  r30,r26
0004b8 23fb         and  r31,r27
0004b9 2368         and  r22,r24
0004ba c005         rjmp __ftrunc1
                 __ftrunc0:
0004bb 94e8         clt
0004bc 2777         clr  r23
0004bd 27ee         clr  r30
0004be 27ff         clr  r31
0004bf 2766         clr  r22
                 __ftrunc1:
0004c0 776f         cbr  r22,0x80
0004c1 9576         lsr  r23
0004c2 f408         brcc __ftrunc3
0004c3 6860         sbr  r22,0x80
                 __ftrunc3:
0004c4 f977         bld  r23,7
0004c5 91a9         ld   r26,y+
0004c6 91b9         ld   r27,y+
0004c7 9189         ld   r24,y+
0004c8 9199         ld   r25,y+
0004c9 17ea         cp   r30,r26
0004ca 07fb         cpc  r31,r27
0004cb 0768         cpc  r22,r24
0004cc 0779         cpc  r23,r25
0004cd fb97         bst  r25,7
0004ce 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0004cf 940e 08c9 	CALL __PUTPARD2
0004d1 940e 08ba 	CALL __GETD2S0
0004d3 940e 049e 	CALL _ftrunc
0004d5 940e 08bf 	CALL __PUTD1S0
0004d7 f419          brne __floor1
                 __floor0:
0004d8 940e 08b5 	CALL __GETD1S0
0004da c009      	RJMP _0x20A0003
                 __floor1:
0004db f7e6          brtc __floor0
0004dc 940e 08b5 	CALL __GETD1S0
                +
0004de e0a0     +LDI R26 , LOW ( 0x3F800000 )
0004df e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0004e0 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0004e1 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0004e2 940e 0736 	CALL __SUBF12
                 _0x20A0003:
0004e4 9624      	ADIW R28,4
0004e5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0004e6 d0de      	RCALL SUBOPT_0xA
0004e7 e0e0      	LDI  R30,LOW(0)
0004e8 83ea      	STD  Y+2,R30
0004e9 e3ef      	LDI  R30,LOW(63)
0004ea 83eb      	STD  Y+3,R30
0004eb 931a      	ST   -Y,R17
0004ec 930a      	ST   -Y,R16
0004ed 85eb      	LDD  R30,Y+11
0004ee 85fc      	LDD  R31,Y+11+1
0004ef 3fef      	CPI  R30,LOW(0xFFFF)
0004f0 efaf      	LDI  R26,HIGH(0xFFFF)
0004f1 07fa      	CPC  R31,R26
0004f2 f431      	BRNE _0x208000D
0004f3 d17a      	RCALL SUBOPT_0x22
                +
0004f4 eba0     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
0004f5 e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW2FN _0x2080000,0
0004f6 940e 0478 	CALL _strcpyf
0004f8 c08a      	RJMP _0x20A0002
                 _0x208000D:
0004f9 3fef      	CPI  R30,LOW(0x7FFF)
0004fa e7af      	LDI  R26,HIGH(0x7FFF)
0004fb 07fa      	CPC  R31,R26
0004fc f431      	BRNE _0x208000C
0004fd d170      	RCALL SUBOPT_0x22
                +
0004fe eba1     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
0004ff e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW2FN _0x2080000,1
000500 940e 0478 	CALL _strcpyf
000502 c080      	RJMP _0x20A0002
                 _0x208000C:
000503 85ac      	LDD  R26,Y+12
000504 23aa      	TST  R26
000505 f452      	BRPL _0x208000F
                +
000506 85e9     +LDD R30 , Y + 9
000507 85fa     +LDD R31 , Y + 9 + 1
000508 856b     +LDD R22 , Y + 9 + 2
000509 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00050a 940e 0697 	CALL __ANEGF1
00050c d166      	RCALL SUBOPT_0x23
00050d d16a      	RCALL SUBOPT_0x24
00050e e2ed      	LDI  R30,LOW(45)
00050f 93ec      	ST   X,R30
                 _0x208000F:
000510 85a8      	LDD  R26,Y+8
000511 30a7      	CPI  R26,LOW(0x7)
000512 f010      	BRLO _0x2080010
000513 e0e6      	LDI  R30,LOW(6)
000514 87e8      	STD  Y+8,R30
                 _0x2080010:
000515 8518      	LDD  R17,Y+8
                 _0x2080011:
000516 2fe1      	MOV  R30,R17
000517 5011      	SUBI R17,1
000518 30e0      	CPI  R30,0
000519 f021      	BREQ _0x2080013
00051a d164      	RCALL SUBOPT_0x25
00051b d0e2      	RCALL SUBOPT_0x11
00051c d167      	RCALL SUBOPT_0x26
00051d cff8      	RJMP _0x2080011
                 _0x2080013:
00051e d16a      	RCALL SUBOPT_0x27
00051f 940e 073d 	CALL __ADDF12
000521 d151      	RCALL SUBOPT_0x23
000522 e010      	LDI  R17,LOW(0)
                +
000523 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000524 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000525 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000526 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000527 d15c      	RCALL SUBOPT_0x26
                 _0x2080014:
000528 d160      	RCALL SUBOPT_0x27
000529 940e 0820 	CALL __CMPF12
00052b f068      	BRLO _0x2080016
00052c d152      	RCALL SUBOPT_0x25
00052d d0c2      	RCALL SUBOPT_0xF
00052e d155      	RCALL SUBOPT_0x26
00052f 5f1f      	SUBI R17,-LOW(1)
000530 3217      	CPI  R17,39
000531 f030      	BRLO _0x2080017
000532 d13b      	RCALL SUBOPT_0x22
                +
000533 eba5     +LDI R26 , LOW ( 2 * _0x2080000 + ( 5 ) )
000534 e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW2FN _0x2080000,5
000535 940e 0478 	CALL _strcpyf
000537 c04b      	RJMP _0x20A0002
                 _0x2080017:
000538 cfef      	RJMP _0x2080014
                 _0x2080016:
000539 3010      	CPI  R17,0
00053a f421      	BRNE _0x2080018
00053b d13c      	RCALL SUBOPT_0x24
00053c e3e0      	LDI  R30,LOW(48)
00053d 93ec      	ST   X,R30
00053e c020      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
00053f 2fe1      	MOV  R30,R17
000540 5011      	SUBI R17,1
000541 30e0      	CPI  R30,0
000542 f0e1      	BREQ _0x208001C
000543 d13b      	RCALL SUBOPT_0x25
000544 d0b9      	RCALL SUBOPT_0x11
000545 d0b1      	RCALL SUBOPT_0x10
000546 01df      	MOVW R26,R30
000547 01cb      	MOVW R24,R22
000548 940e 04cf 	CALL _floor
00054a d139      	RCALL SUBOPT_0x26
00054b d13d      	RCALL SUBOPT_0x27
00054c 940e 07db 	CALL __DIVF21
00054e 940e 06ca 	CALL __CFD1U
000550 2f0e      	MOV  R16,R30
000551 d126      	RCALL SUBOPT_0x24
000552 d0b9      	RCALL SUBOPT_0x13
000553 e0f0      	LDI  R31,0
000554 d12a      	RCALL SUBOPT_0x25
000555 940e 0852 	CALL __CWD1
000557 940e 0703 	CALL __CDF1
000559 940e 078d 	CALL __MULF12
00055b d136      	RCALL SUBOPT_0x28
00055c d0b4      	RCALL SUBOPT_0x14
00055d d115      	RCALL SUBOPT_0x23
00055e cfe0      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
00055f 85e8      	LDD  R30,Y+8
000560 30e0      	CPI  R30,0
000561 f0e9      	BREQ _0x20A0001
000562 d115      	RCALL SUBOPT_0x24
000563 e2ee      	LDI  R30,LOW(46)
000564 93ec      	ST   X,R30
                 _0x208001E:
000565 85e8      	LDD  R30,Y+8
000566 50e1      	SUBI R30,LOW(1)
000567 87e8      	STD  Y+8,R30
000568 5fef      	SUBI R30,-LOW(1)
000569 f0a9      	BREQ _0x2080020
00056a d127      	RCALL SUBOPT_0x28
00056b d084      	RCALL SUBOPT_0xF
00056c d106      	RCALL SUBOPT_0x23
                +
00056d 85e9     +LDD R30 , Y + 9
00056e 85fa     +LDD R31 , Y + 9 + 1
00056f 856b     +LDD R22 , Y + 9 + 2
000570 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000571 940e 06ca 	CALL __CFD1U
000573 2f0e      	MOV  R16,R30
000574 d103      	RCALL SUBOPT_0x24
000575 d096      	RCALL SUBOPT_0x13
000576 e0f0      	LDI  R31,0
000577 d11a      	RCALL SUBOPT_0x28
000578 940e 0852 	CALL __CWD1
00057a 940e 0703 	CALL __CDF1
00057c d094      	RCALL SUBOPT_0x14
00057d d0f5      	RCALL SUBOPT_0x23
00057e cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
00057f 81ae      	LDD  R26,Y+6
000580 81bf      	LDD  R27,Y+6+1
000581 e0e0      	LDI  R30,LOW(0)
000582 93ec      	ST   X,R30
                 _0x20A0002:
000583 8119      	LDD  R17,Y+1
000584 8108      	LDD  R16,Y+0
000585 962d      	ADIW R28,13
000586 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G104:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000587 b5e6      	IN   R30,0x26
000588 2fae      	MOV  R26,R30
000589 b5e7      	IN   R30,0x27
00058a 2ffe      	MOV  R31,R30
00058b e0e0      	LDI  R30,0
00058c 2bea      	OR   R30,R26
00058d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
                +
00058e 8be8     +STD Y + 16 , R30
00058f 8bf9     +STD Y + 16 + 1 , R31
000590 8b6a     +STD Y + 16 + 2 , R22
000591 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000592 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
                +
000593 87ec     +STD Y + 12 , R30
000594 87fd     +STD Y + 12 + 1 , R31
000595 876e     +STD Y + 12 + 2 , R22
000596 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000597 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000598 85ec     +LDD R30 , Y + 12
000599 85fd     +LDD R31 , Y + 12 + 1
00059a 856e     +LDD R22 , Y + 12 + 2
00059b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00059c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
                +
00059d 89a8     +LDD R26 , Y + 16
00059e 89b9     +LDD R27 , Y + 16 + 1
00059f 898a     +LDD R24 , Y + 16 + 2
0005a0 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0005a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0005a2 2766      	CLR  R22
0005a3 2777      	CLR  R23
0005a4 940e 08c4 	CALL __PUTPARD1
0005a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
                +
0005a7 83ec     +STD Y + 4 , R30
0005a8 83fd     +STD Y + 4 + 1 , R31
0005a9 836e     +STD Y + 4 + 2 , R22
0005aa 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0005ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x7:
                +
0005ac e0e0     +LDI R30 , LOW ( 0x49A8C000 )
0005ad ecf0     +LDI R31 , HIGH ( 0x49A8C000 )
0005ae ea68     +LDI R22 , BYTE3 ( 0x49A8C000 )
0005af e479     +LDI R23 , BYTE4 ( 0x49A8C000 )
                 	__GETD1N 0x49A8C000
0005b0 940e 07db 	CALL __DIVF21
0005b2 940e 08c4 	CALL __PUTPARD1
0005b4 e084      	LDI  R24,4
0005b5 940e 0453 	CALL _printf
0005b7 9626      	ADIW R28,6
0005b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
0005b9 85aa     +LDD R26 , Y + 10
0005ba 85bb     +LDD R27 , Y + 10 + 1
0005bb 858c     +LDD R24 , Y + 10 + 2
0005bc 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0005bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
0005be 81ee     +LDD R30 , Y + 6
0005bf 81ff     +LDD R31 , Y + 6 + 1
0005c0 8568     +LDD R22 , Y + 6 + 2
0005c1 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0005c2 940e 08c4 	CALL __PUTPARD1
0005c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
0005c5 93ba      	ST   -Y,R27
0005c6 93aa      	ST   -Y,R26
0005c7 9724      	SBIW R28,4
0005c8 e0e0      	LDI  R30,LOW(0)
0005c9 83e8      	ST   Y,R30
0005ca 83e9      	STD  Y+1,R30
0005cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xB:
                +
0005cc 81ac     +LDD R26 , Y + 4
0005cd 81bd     +LDD R27 , Y + 4 + 1
0005ce 818e     +LDD R24 , Y + 4 + 2
0005cf 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005d0 e0e0     +LDI R30 , LOW ( 0x41200000 )
0005d1 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005d2 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005d3 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005d4 940e 078d 	CALL __MULF12
0005d6 cfd0      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
                +
0005d7 81ec     +LDD R30 , Y + 4
0005d8 81fd     +LDD R31 , Y + 4 + 1
0005d9 816e     +LDD R22 , Y + 4 + 2
0005da 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0005db 85ac     +LDD R26 , Y + 12
0005dc 85bd     +LDD R27 , Y + 12 + 1
0005dd 858e     +LDD R24 , Y + 12 + 2
0005de 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005df 940e 0820 	CALL __CMPF12
0005e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
0005e2 85ac     +LDD R26 , Y + 12
0005e3 85bd     +LDD R27 , Y + 12 + 1
0005e4 858e     +LDD R24 , Y + 12 + 2
0005e5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE:
                +
0005e7 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005e8 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005e9 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005ea e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005eb 940e 078d 	CALL __MULF12
0005ed dfa5      	RCALL SUBOPT_0x2
0005ee 5f3f      	SUBI R19,-LOW(1)
0005ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
0005f0 e0e0     +LDI R30 , LOW ( 0x41200000 )
0005f1 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005f2 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005f3 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005f4 940e 078d 	CALL __MULF12
0005f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
0005f7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005f8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005f9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005fa e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005fb 940e 073d 	CALL __ADDF12
0005fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
0005fe eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005ff ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000600 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000601 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000602 940e 078d 	CALL __MULF12
000604 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000605 85a8      	LDD  R26,Y+8
000606 85b9      	LDD  R27,Y+8+1
000607 9611      	ADIW R26,1
000608 87a8      	STD  Y+8,R26
000609 87b9      	STD  Y+8+1,R27
00060a 9711      	SBIW R26,1
00060b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00060c 2fe0      	MOV  R30,R16
00060d 5de0      	SUBI R30,-LOW(48)
00060e 93ec      	ST   X,R30
00060f 2fe0      	MOV  R30,R16
000610 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000611 940e 08ce 	CALL __SWAPD12
000613 940e 0736 	CALL __SUBF12
000615 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000616 85e8      	LDD  R30,Y+8
000617 85f9      	LDD  R31,Y+8+1
000618 9631      	ADIW R30,1
000619 87e8      	STD  Y+8,R30
00061a 87f9      	STD  Y+8+1,R31
00061b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
00061c 932a      	ST   -Y,R18
00061d 81af      	LDD  R26,Y+7
00061e 85b8      	LDD  R27,Y+7+1
00061f 85e9      	LDD  R30,Y+9
000620 85fa      	LDD  R31,Y+9+1
000621 9509      	ICALL
000622 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x17:
                +
000623 01fe     +MOVW R30 , R28
000624 5ae6     +SUBI R30 , LOW ( - 90 )
000625 4fff     +SBCI R31 , HIGH ( - 90 )
000626 9001     +LD R0 , Z +
000627 81f0     +LD R31 , Z
000628 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000629 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x18:
00062a 9734      	SBIW R30,4
                +
00062b 01de     +MOVW R26 , R28
00062c 5aa6     +SUBI R26 , LOW ( - 90 )
00062d 4fbf     +SBCI R27 , HIGH ( - 90 )
00062e 93ed     +ST X + , R30
00062f 93fc     +ST X , R31
                 	__PUTW1SX 90
000630 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x19:
000631 81af      	LDD  R26,Y+7
000632 85b8      	LDD  R27,Y+7+1
000633 85e9      	LDD  R30,Y+9
000634 85fa      	LDD  R31,Y+9+1
000635 9509      	ICALL
000636 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A:
                +
000637 01de     +MOVW R26 , R28
000638 5aa6     +SUBI R26 , LOW ( - 90 )
000639 4fbf     +SBCI R27 , HIGH ( - 90 )
00063a 900d     +LD R0 , X +
00063b 91bc     +LD R27 , X
00063c 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00063d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
00063e 87ea     +STD Y + 10 , R30
00063f 87fb     +STD Y + 10 + 1 , R31
000640 876c     +STD Y + 10 + 2 , R22
000641 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000643 dfdf      	RCALL SUBOPT_0x17
000644 cfe5      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000645 85ea     +LDD R30 , Y + 10
000646 85fb     +LDD R31 , Y + 10 + 1
000647 856c     +LDD R22 , Y + 10 + 2
000648 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
00064a 87ee      	STD  Y+14,R30
00064b 87ff      	STD  Y+14+1,R31
00064c 85ae      	LDD  R26,Y+14
00064d 85bf      	LDD  R27,Y+14+1
00064e 940e 0485 	CALL _strlen
000650 2f1e      	MOV  R17,R30
000651 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F:
000652 dfe4      	RCALL SUBOPT_0x1A
000653 9614      	ADIW R26,4
000654 940e 08ab 	CALL __GETW1P
000656 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x20:
000657 7f0b      	ANDI R16,LOW(251)
000658 89ed      	LDD  R30,Y+21
000659 93ea      	ST   -Y,R30
                +
00065a 01de     +MOVW R26 , R28
00065b 5aa9     +SUBI R26 , LOW ( - 87 )
00065c 4fbf     +SBCI R27 , HIGH ( - 87 )
00065d 900d     +LD R0 , X +
00065e 91bc     +LD R27 , X
00065f 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000660 01fe     +MOVW R30 , R28
000661 5ae7     +SUBI R30 , LOW ( - 89 )
000662 4fff     +SBCI R31 , HIGH ( - 89 )
000663 9001     +LD R0 , Z +
000664 81f0     +LD R31 , Z
000665 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000666 9509      	ICALL
000667 3050      	CPI  R21,0
000668 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
                +
000669 89e8     +LDD R30 , Y + 16
00066a 89f9     +LDD R31 , Y + 16 + 1
00066b 896a     +LDD R22 , Y + 16 + 2
00066c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00066d cf4b      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
00066e 81ee      	LDD  R30,Y+6
00066f 81ff      	LDD  R31,Y+6+1
000670 93fa      	ST   -Y,R31
000671 93ea      	ST   -Y,R30
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
000673 87e9     +STD Y + 9 , R30
000674 87fa     +STD Y + 9 + 1 , R31
000675 876b     +STD Y + 9 + 2 , R22
000676 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
000678 81ae      	LDD  R26,Y+6
000679 81bf      	LDD  R27,Y+6+1
00067a 9611      	ADIW R26,1
00067b 83ae      	STD  Y+6,R26
00067c 83bf      	STD  Y+6+1,R27
00067d 9711      	SBIW R26,1
00067e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
00067f 81aa     +LDD R26 , Y + 2
000680 81bb     +LDD R27 , Y + 2 + 1
000681 818c     +LDD R24 , Y + 2 + 2
000682 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000683 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000684 83ea     +STD Y + 2 , R30
000685 83fb     +STD Y + 2 + 1 , R31
000686 836c     +STD Y + 2 + 2 , R22
000687 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000688 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
000689 81ea     +LDD R30 , Y + 2
00068a 81fb     +LDD R31 , Y + 2 + 1
00068b 816c     +LDD R22 , Y + 2 + 2
00068c 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00068d 85a9     +LDD R26 , Y + 9
00068e 85ba     +LDD R27 , Y + 9 + 1
00068f 858b     +LDD R24 , Y + 9 + 2
000690 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
000692 85a9     +LDD R26 , Y + 9
000693 85ba     +LDD R27 , Y + 9 + 1
000694 858b     +LDD R24 , Y + 9 + 2
000695 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000696 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGF1:
000697 9730      	SBIW R30,0
000698 4060      	SBCI R22,0
000699 4070      	SBCI R23,0
00069a f009      	BREQ __ANEGF10
00069b 5870      	SUBI R23,0x80
                 __ANEGF10:
00069c 9508      	RET
                 
                 __ROUND_REPACK:
00069d 2355      	TST  R21
00069e f442      	BRPL __REPACK
00069f 3850      	CPI  R21,0x80
0006a0 f411      	BRNE __ROUND_REPACK0
0006a1 ffe0      	SBRS R30,0
0006a2 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006a3 9631      	ADIW R30,1
0006a4 1f69      	ADC  R22,R25
0006a5 1f79      	ADC  R23,R25
0006a6 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0006a7 e850      	LDI  R21,0x80
0006a8 2757      	EOR  R21,R23
0006a9 f411      	BRNE __REPACK0
0006aa 935f      	PUSH R21
0006ab c0cf      	RJMP __ZERORES
                 __REPACK0:
0006ac 3f5f      	CPI  R21,0xFF
0006ad f031      	BREQ __REPACK1
0006ae 0f66      	LSL  R22
0006af 0c00      	LSL  R0
0006b0 9557      	ROR  R21
0006b1 9567      	ROR  R22
0006b2 2f75      	MOV  R23,R21
0006b3 9508      	RET
                 __REPACK1:
0006b4 935f      	PUSH R21
0006b5 2000      	TST  R0
0006b6 f00a      	BRMI __REPACK2
0006b7 c0cf      	RJMP __MAXRES
                 __REPACK2:
0006b8 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0006b9 e850      	LDI  R21,0x80
0006ba 2e19      	MOV  R1,R25
0006bb 2215      	AND  R1,R21
0006bc 0f88      	LSL  R24
0006bd 1f99      	ROL  R25
0006be 2795      	EOR  R25,R21
0006bf 0f55      	LSL  R21
0006c0 9587      	ROR  R24
                 
                 __UNPACK1:
0006c1 e850      	LDI  R21,0x80
0006c2 2e07      	MOV  R0,R23
0006c3 2205      	AND  R0,R21
0006c4 0f66      	LSL  R22
0006c5 1f77      	ROL  R23
0006c6 2775      	EOR  R23,R21
0006c7 0f55      	LSL  R21
0006c8 9567      	ROR  R22
0006c9 9508      	RET
                 
                 __CFD1U:
0006ca 9468      	SET
0006cb c001      	RJMP __CFD1U0
                 __CFD1:
0006cc 94e8      	CLT
                 __CFD1U0:
0006cd 935f      	PUSH R21
0006ce dff2      	RCALL __UNPACK1
0006cf 3870      	CPI  R23,0x80
0006d0 f018      	BRLO __CFD10
0006d1 3f7f      	CPI  R23,0xFF
0006d2 f408      	BRCC __CFD10
0006d3 c0a7      	RJMP __ZERORES
                 __CFD10:
0006d4 e156      	LDI  R21,22
0006d5 1b57      	SUB  R21,R23
0006d6 f4aa      	BRPL __CFD11
0006d7 9551      	NEG  R21
0006d8 3058      	CPI  R21,8
0006d9 f40e      	BRTC __CFD19
0006da 3059      	CPI  R21,9
                 __CFD19:
0006db f030      	BRLO __CFD17
0006dc efef      	SER  R30
0006dd efff      	SER  R31
0006de ef6f      	SER  R22
0006df e77f      	LDI  R23,0x7F
0006e0 f977      	BLD  R23,7
0006e1 c01a      	RJMP __CFD15
                 __CFD17:
0006e2 2777      	CLR  R23
0006e3 2355      	TST  R21
0006e4 f0b9      	BREQ __CFD15
                 __CFD18:
0006e5 0fee      	LSL  R30
0006e6 1fff      	ROL  R31
0006e7 1f66      	ROL  R22
0006e8 1f77      	ROL  R23
0006e9 955a      	DEC  R21
0006ea f7d1      	BRNE __CFD18
0006eb c010      	RJMP __CFD15
                 __CFD11:
0006ec 2777      	CLR  R23
                 __CFD12:
0006ed 3058      	CPI  R21,8
0006ee f028      	BRLO __CFD13
0006ef 2fef      	MOV  R30,R31
0006f0 2ff6      	MOV  R31,R22
0006f1 2f67      	MOV  R22,R23
0006f2 5058      	SUBI R21,8
0006f3 cff9      	RJMP __CFD12
                 __CFD13:
0006f4 2355      	TST  R21
0006f5 f031      	BREQ __CFD15
                 __CFD14:
0006f6 9576      	LSR  R23
0006f7 9567      	ROR  R22
0006f8 95f7      	ROR  R31
0006f9 95e7      	ROR  R30
0006fa 955a      	DEC  R21
0006fb f7d1      	BRNE __CFD14
                 __CFD15:
0006fc 2000      	TST  R0
0006fd f40a      	BRPL __CFD16
0006fe d145      	RCALL __ANEGD1
                 __CFD16:
0006ff 915f      	POP  R21
000700 9508      	RET
                 
                 __CDF1U:
000701 9468      	SET
000702 c001      	RJMP __CDF1U0
                 __CDF1:
000703 94e8      	CLT
                 __CDF1U0:
000704 9730      	SBIW R30,0
000705 4060      	SBCI R22,0
000706 4070      	SBCI R23,0
000707 f0b1      	BREQ __CDF10
000708 2400      	CLR  R0
000709 f026      	BRTS __CDF11
00070a 2377      	TST  R23
00070b f412      	BRPL __CDF11
00070c 9400      	COM  R0
00070d d136      	RCALL __ANEGD1
                 __CDF11:
00070e 2e17      	MOV  R1,R23
00070f e17e      	LDI  R23,30
000710 2011      	TST  R1
                 __CDF12:
000711 f032      	BRMI __CDF13
000712 957a      	DEC  R23
000713 0fee      	LSL  R30
000714 1fff      	ROL  R31
000715 1f66      	ROL  R22
000716 1c11      	ROL  R1
000717 cff9      	RJMP __CDF12
                 __CDF13:
000718 2fef      	MOV  R30,R31
000719 2ff6      	MOV  R31,R22
00071a 2d61      	MOV  R22,R1
00071b 935f      	PUSH R21
00071c df8a      	RCALL __REPACK
00071d 915f      	POP  R21
                 __CDF10:
00071e 9508      	RET
                 
                 __SWAPACC:
00071f 934f      	PUSH R20
000720 01af      	MOVW R20,R30
000721 01fd      	MOVW R30,R26
000722 01da      	MOVW R26,R20
000723 01ab      	MOVW R20,R22
000724 01bc      	MOVW R22,R24
000725 01ca      	MOVW R24,R20
000726 2d40      	MOV  R20,R0
000727 2c01      	MOV  R0,R1
000728 2e14      	MOV  R1,R20
000729 914f      	POP  R20
00072a 9508      	RET
                 
                 __UADD12:
00072b 0fea      	ADD  R30,R26
00072c 1ffb      	ADC  R31,R27
00072d 1f68      	ADC  R22,R24
00072e 9508      	RET
                 
                 __NEGMAN1:
00072f 95e0      	COM  R30
000730 95f0      	COM  R31
000731 9560      	COM  R22
000732 5fef      	SUBI R30,-1
000733 4fff      	SBCI R31,-1
000734 4f6f      	SBCI R22,-1
000735 9508      	RET
                 
                 __SUBF12:
000736 935f      	PUSH R21
000737 df81      	RCALL __UNPACK
000738 3890      	CPI  R25,0x80
000739 f171      	BREQ __ADDF129
00073a e850      	LDI  R21,0x80
00073b 2615      	EOR  R1,R21
                 
00073c c004      	RJMP __ADDF120
                 
                 __ADDF12:
00073d 935f      	PUSH R21
00073e df7a      	RCALL __UNPACK
00073f 3890      	CPI  R25,0x80
000740 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000741 3870      	CPI  R23,0x80
000742 f121      	BREQ __ADDF128
                 __ADDF121:
000743 2f57      	MOV  R21,R23
000744 1b59      	SUB  R21,R25
000745 f12b      	BRVS __ADDF1211
000746 f412      	BRPL __ADDF122
000747 dfd7      	RCALL __SWAPACC
000748 cffa      	RJMP __ADDF121
                 __ADDF122:
000749 3158      	CPI  R21,24
00074a f018      	BRLO __ADDF123
00074b 27aa      	CLR  R26
00074c 27bb      	CLR  R27
00074d 2788      	CLR  R24
                 __ADDF123:
00074e 3058      	CPI  R21,8
00074f f028      	BRLO __ADDF124
000750 2fab      	MOV  R26,R27
000751 2fb8      	MOV  R27,R24
000752 2788      	CLR  R24
000753 5058      	SUBI R21,8
000754 cff9      	RJMP __ADDF123
                 __ADDF124:
000755 2355      	TST  R21
000756 f029      	BREQ __ADDF126
                 __ADDF125:
000757 9586      	LSR  R24
000758 95b7      	ROR  R27
000759 95a7      	ROR  R26
00075a 955a      	DEC  R21
00075b f7d9      	BRNE __ADDF125
                 __ADDF126:
00075c 2d50      	MOV  R21,R0
00075d 2551      	EOR  R21,R1
00075e f072      	BRMI __ADDF127
00075f dfcb      	RCALL __UADD12
000760 f438      	BRCC __ADDF129
000761 9567      	ROR  R22
000762 95f7      	ROR  R31
000763 95e7      	ROR  R30
000764 9573      	INC  R23
000765 f413      	BRVC __ADDF129
000766 c020      	RJMP __MAXRES
                 __ADDF128:
000767 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000768 df3e      	RCALL __REPACK
000769 915f      	POP  R21
00076a 9508      	RET
                 __ADDF1211:
00076b f7d8      	BRCC __ADDF128
00076c cffb      	RJMP __ADDF129
                 __ADDF127:
00076d 1bea      	SUB  R30,R26
00076e 0bfb      	SBC  R31,R27
00076f 0b68      	SBC  R22,R24
000770 f051      	BREQ __ZERORES
000771 f410      	BRCC __ADDF1210
000772 9400      	COM  R0
000773 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000774 2366      	TST  R22
000775 f392      	BRMI __ADDF129
000776 0fee      	LSL  R30
000777 1fff      	ROL  R31
000778 1f66      	ROL  R22
000779 957a      	DEC  R23
00077a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00077b 27ee      	CLR  R30
00077c 27ff      	CLR  R31
00077d 2766      	CLR  R22
00077e 2777      	CLR  R23
00077f 915f      	POP  R21
000780 9508      	RET
                 
                 __MINRES:
000781 efef      	SER  R30
000782 efff      	SER  R31
000783 e76f      	LDI  R22,0x7F
000784 ef7f      	SER  R23
000785 915f      	POP  R21
000786 9508      	RET
                 
                 __MAXRES:
000787 efef      	SER  R30
000788 efff      	SER  R31
000789 e76f      	LDI  R22,0x7F
00078a e77f      	LDI  R23,0x7F
00078b 915f      	POP  R21
00078c 9508      	RET
                 
                 __MULF12:
00078d 935f      	PUSH R21
00078e df2a      	RCALL __UNPACK
00078f 3870      	CPI  R23,0x80
000790 f351      	BREQ __ZERORES
000791 3890      	CPI  R25,0x80
000792 f341      	BREQ __ZERORES
000793 2401      	EOR  R0,R1
000794 9408      	SEC
000795 1f79      	ADC  R23,R25
000796 f423      	BRVC __MULF124
000797 f31c      	BRLT __ZERORES
                 __MULF125:
000798 2000      	TST  R0
000799 f33a      	BRMI __MINRES
00079a cfec      	RJMP __MAXRES
                 __MULF124:
00079b 920f      	PUSH R0
00079c 931f      	PUSH R17
00079d 932f      	PUSH R18
00079e 933f      	PUSH R19
00079f 934f      	PUSH R20
0007a0 2711      	CLR  R17
0007a1 2722      	CLR  R18
0007a2 2799      	CLR  R25
0007a3 9f68      	MUL  R22,R24
0007a4 01a0      	MOVW R20,R0
0007a5 9f8f      	MUL  R24,R31
0007a6 2d30      	MOV  R19,R0
0007a7 0d41      	ADD  R20,R1
0007a8 1f59      	ADC  R21,R25
0007a9 9f6b      	MUL  R22,R27
0007aa 0d30      	ADD  R19,R0
0007ab 1d41      	ADC  R20,R1
0007ac 1f59      	ADC  R21,R25
0007ad 9f8e      	MUL  R24,R30
0007ae d027      	RCALL __MULF126
0007af 9fbf      	MUL  R27,R31
0007b0 d025      	RCALL __MULF126
0007b1 9f6a      	MUL  R22,R26
0007b2 d023      	RCALL __MULF126
0007b3 9fbe      	MUL  R27,R30
0007b4 d01d      	RCALL __MULF127
0007b5 9faf      	MUL  R26,R31
0007b6 d01b      	RCALL __MULF127
0007b7 9fae      	MUL  R26,R30
0007b8 0d11      	ADD  R17,R1
0007b9 1f29      	ADC  R18,R25
0007ba 1f39      	ADC  R19,R25
0007bb 1f49      	ADC  R20,R25
0007bc 1f59      	ADC  R21,R25
0007bd 2fe3      	MOV  R30,R19
0007be 2ff4      	MOV  R31,R20
0007bf 2f65      	MOV  R22,R21
0007c0 2f52      	MOV  R21,R18
0007c1 914f      	POP  R20
0007c2 913f      	POP  R19
0007c3 912f      	POP  R18
0007c4 911f      	POP  R17
0007c5 900f      	POP  R0
0007c6 2366      	TST  R22
0007c7 f02a      	BRMI __MULF122
0007c8 0f55      	LSL  R21
0007c9 1fee      	ROL  R30
0007ca 1fff      	ROL  R31
0007cb 1f66      	ROL  R22
0007cc c002      	RJMP __MULF123
                 __MULF122:
0007cd 9573      	INC  R23
0007ce f24b      	BRVS __MULF125
                 __MULF123:
0007cf decd      	RCALL __ROUND_REPACK
0007d0 915f      	POP  R21
0007d1 9508      	RET
                 
                 __MULF127:
0007d2 0d10      	ADD  R17,R0
0007d3 1d21      	ADC  R18,R1
0007d4 1f39      	ADC  R19,R25
0007d5 c002      	RJMP __MULF128
                 __MULF126:
0007d6 0d20      	ADD  R18,R0
0007d7 1d31      	ADC  R19,R1
                 __MULF128:
0007d8 1f49      	ADC  R20,R25
0007d9 1f59      	ADC  R21,R25
0007da 9508      	RET
                 
                 __DIVF21:
0007db 935f      	PUSH R21
0007dc dedc      	RCALL __UNPACK
0007dd 3870      	CPI  R23,0x80
0007de f421      	BRNE __DIVF210
0007df 2011      	TST  R1
                 __DIVF211:
0007e0 f40a      	BRPL __DIVF219
0007e1 cf9f      	RJMP __MINRES
                 __DIVF219:
0007e2 cfa4      	RJMP __MAXRES
                 __DIVF210:
0007e3 3890      	CPI  R25,0x80
0007e4 f409      	BRNE __DIVF218
                 __DIVF217:
0007e5 cf95      	RJMP __ZERORES
                 __DIVF218:
0007e6 2401      	EOR  R0,R1
0007e7 9408      	SEC
0007e8 0b97      	SBC  R25,R23
0007e9 f41b      	BRVC __DIVF216
0007ea f3d4      	BRLT __DIVF217
0007eb 2000      	TST  R0
0007ec cff3      	RJMP __DIVF211
                 __DIVF216:
0007ed 2f79      	MOV  R23,R25
0007ee 931f      	PUSH R17
0007ef 932f      	PUSH R18
0007f0 933f      	PUSH R19
0007f1 934f      	PUSH R20
0007f2 2411      	CLR  R1
0007f3 2711      	CLR  R17
0007f4 2722      	CLR  R18
0007f5 2733      	CLR  R19
0007f6 2744      	CLR  R20
0007f7 2755      	CLR  R21
0007f8 e290      	LDI  R25,32
                 __DIVF212:
0007f9 17ae      	CP   R26,R30
0007fa 07bf      	CPC  R27,R31
0007fb 0786      	CPC  R24,R22
0007fc 0741      	CPC  R20,R17
0007fd f030      	BRLO __DIVF213
0007fe 1bae      	SUB  R26,R30
0007ff 0bbf      	SBC  R27,R31
000800 0b86      	SBC  R24,R22
000801 0b41      	SBC  R20,R17
000802 9408      	SEC
000803 c001      	RJMP __DIVF214
                 __DIVF213:
000804 9488      	CLC
                 __DIVF214:
000805 1f55      	ROL  R21
000806 1f22      	ROL  R18
000807 1f33      	ROL  R19
000808 1c11      	ROL  R1
000809 1faa      	ROL  R26
00080a 1fbb      	ROL  R27
00080b 1f88      	ROL  R24
00080c 1f44      	ROL  R20
00080d 959a      	DEC  R25
00080e f751      	BRNE __DIVF212
00080f 01f9      	MOVW R30,R18
000810 2d61      	MOV  R22,R1
000811 914f      	POP  R20
000812 913f      	POP  R19
000813 912f      	POP  R18
000814 911f      	POP  R17
000815 2366      	TST  R22
000816 f032      	BRMI __DIVF215
000817 0f55      	LSL  R21
000818 1fee      	ROL  R30
000819 1fff      	ROL  R31
00081a 1f66      	ROL  R22
00081b 957a      	DEC  R23
00081c f243      	BRVS __DIVF217
                 __DIVF215:
00081d de7f      	RCALL __ROUND_REPACK
00081e 915f      	POP  R21
00081f 9508      	RET
                 
                 __CMPF12:
000820 2399      	TST  R25
000821 f09a      	BRMI __CMPF120
000822 2377      	TST  R23
000823 f042      	BRMI __CMPF121
000824 1797      	CP   R25,R23
000825 f048      	BRLO __CMPF122
000826 f429      	BRNE __CMPF121
000827 17ae      	CP   R26,R30
000828 07bf      	CPC  R27,R31
000829 0786      	CPC  R24,R22
00082a f020      	BRLO __CMPF122
00082b f031      	BREQ __CMPF123
                 __CMPF121:
00082c 9498      	CLZ
00082d 9488      	CLC
00082e 9508      	RET
                 __CMPF122:
00082f 9498      	CLZ
000830 9408      	SEC
000831 9508      	RET
                 __CMPF123:
000832 9418      	SEZ
000833 9488      	CLC
000834 9508      	RET
                 __CMPF120:
000835 2377      	TST  R23
000836 f7c2      	BRPL __CMPF122
000837 1797      	CP   R25,R23
000838 f398      	BRLO __CMPF121
000839 f7a9      	BRNE __CMPF122
00083a 17ea      	CP   R30,R26
00083b 07fb      	CPC  R31,R27
00083c 0768      	CPC  R22,R24
00083d f388      	BRLO __CMPF122
00083e f399      	BREQ __CMPF123
00083f cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000840 2400      	CLR  R0
000841 0daf      	ADD  R26,R15
000842 1db0      	ADC  R27,R0
000843 9508      	RET
                 
                 __ANEGD1:
000844 95f0      	COM  R31
000845 9560      	COM  R22
000846 9570      	COM  R23
000847 95e1      	NEG  R30
000848 4fff      	SBCI R31,-1
000849 4f6f      	SBCI R22,-1
00084a 4f7f      	SBCI R23,-1
00084b 9508      	RET
                 
                 __CBD1:
00084c 2ffe      	MOV  R31,R30
00084d 0fff      	ADD  R31,R31
00084e 0bff      	SBC  R31,R31
00084f 2f6f      	MOV  R22,R31
000850 2f7f      	MOV  R23,R31
000851 9508      	RET
                 
                 __CWD1:
000852 2f6f      	MOV  R22,R31
000853 0f66      	ADD  R22,R22
000854 0b66      	SBC  R22,R22
000855 2f76      	MOV  R23,R22
000856 9508      	RET
                 
                 __DIVB21U:
000857 2400      	CLR  R0
000858 e098      	LDI  R25,8
                 __DIVB21U1:
000859 0faa      	LSL  R26
00085a 1c00      	ROL  R0
00085b 1a0e      	SUB  R0,R30
00085c f410      	BRCC __DIVB21U2
00085d 0e0e      	ADD  R0,R30
00085e c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00085f 60a1      	SBR  R26,1
                 __DIVB21U3:
000860 959a      	DEC  R25
000861 f7b9      	BRNE __DIVB21U1
000862 2fea      	MOV  R30,R26
000863 2da0      	MOV  R26,R0
000864 9508      	RET
                 
                 __DIVB21:
000865 d039      	RCALL __CHKSIGNB
000866 dff0      	RCALL __DIVB21U
000867 f40e      	BRTC __DIVB211
000868 95e1      	NEG  R30
                 __DIVB211:
000869 9508      	RET
                 
                 __DIVD21U:
00086a 933f      	PUSH R19
00086b 934f      	PUSH R20
00086c 935f      	PUSH R21
00086d 2400      	CLR  R0
00086e 2411      	CLR  R1
00086f 2744      	CLR  R20
000870 2755      	CLR  R21
000871 e230      	LDI  R19,32
                 __DIVD21U1:
000872 0faa      	LSL  R26
000873 1fbb      	ROL  R27
000874 1f88      	ROL  R24
000875 1f99      	ROL  R25
000876 1c00      	ROL  R0
000877 1c11      	ROL  R1
000878 1f44      	ROL  R20
000879 1f55      	ROL  R21
00087a 1a0e      	SUB  R0,R30
00087b 0a1f      	SBC  R1,R31
00087c 0b46      	SBC  R20,R22
00087d 0b57      	SBC  R21,R23
00087e f428      	BRCC __DIVD21U2
00087f 0e0e      	ADD  R0,R30
000880 1e1f      	ADC  R1,R31
000881 1f46      	ADC  R20,R22
000882 1f57      	ADC  R21,R23
000883 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000884 60a1      	SBR  R26,1
                 __DIVD21U3:
000885 953a      	DEC  R19
000886 f759      	BRNE __DIVD21U1
000887 01fd      	MOVW R30,R26
000888 01bc      	MOVW R22,R24
000889 01d0      	MOVW R26,R0
00088a 01ca      	MOVW R24,R20
00088b 915f      	POP  R21
00088c 914f      	POP  R20
00088d 913f      	POP  R19
00088e 9508      	RET
                 
                 __MODB21:
00088f 94e8      	CLT
000890 ffa7      	SBRS R26,7
000891 c002      	RJMP __MODB211
000892 95a1      	NEG  R26
000893 9468      	SET
                 __MODB211:
000894 fde7      	SBRC R30,7
000895 95e1      	NEG  R30
000896 dfc0      	RCALL __DIVB21U
000897 2fea      	MOV  R30,R26
000898 f40e      	BRTC __MODB212
000899 95e1      	NEG  R30
                 __MODB212:
00089a 9508      	RET
                 
                 __MODD21U:
00089b dfce      	RCALL __DIVD21U
00089c 01fd      	MOVW R30,R26
00089d 01bc      	MOVW R22,R24
00089e 9508      	RET
                 
                 __CHKSIGNB:
00089f 94e8      	CLT
0008a0 ffe7      	SBRS R30,7
0008a1 c002      	RJMP __CHKSB1
0008a2 95e1      	NEG  R30
0008a3 9468      	SET
                 __CHKSB1:
0008a4 ffa7      	SBRS R26,7
0008a5 c004      	RJMP __CHKSB2
0008a6 95a1      	NEG  R26
0008a7 f800      	BLD  R0,0
0008a8 9403      	INC  R0
0008a9 fa00      	BST  R0,0
                 __CHKSB2:
0008aa 9508      	RET
                 
                 __GETW1P:
0008ab 91ed      	LD   R30,X+
0008ac 91fc      	LD   R31,X
0008ad 9711      	SBIW R26,1
0008ae 9508      	RET
                 
                 __GETD1P:
0008af 91ed      	LD   R30,X+
0008b0 91fd      	LD   R31,X+
0008b1 916d      	LD   R22,X+
0008b2 917c      	LD   R23,X
0008b3 9713      	SBIW R26,3
0008b4 9508      	RET
                 
                 __GETD1S0:
0008b5 81e8      	LD   R30,Y
0008b6 81f9      	LDD  R31,Y+1
0008b7 816a      	LDD  R22,Y+2
0008b8 817b      	LDD  R23,Y+3
0008b9 9508      	RET
                 
                 __GETD2S0:
0008ba 81a8      	LD   R26,Y
0008bb 81b9      	LDD  R27,Y+1
0008bc 818a      	LDD  R24,Y+2
0008bd 819b      	LDD  R25,Y+3
0008be 9508      	RET
                 
                 __PUTD1S0:
0008bf 83e8      	ST   Y,R30
0008c0 83f9      	STD  Y+1,R31
0008c1 836a      	STD  Y+2,R22
0008c2 837b      	STD  Y+3,R23
0008c3 9508      	RET
                 
                 __PUTPARD1:
0008c4 937a      	ST   -Y,R23
0008c5 936a      	ST   -Y,R22
0008c6 93fa      	ST   -Y,R31
0008c7 93ea      	ST   -Y,R30
0008c8 9508      	RET
                 
                 __PUTPARD2:
0008c9 939a      	ST   -Y,R25
0008ca 938a      	ST   -Y,R24
0008cb 93ba      	ST   -Y,R27
0008cc 93aa      	ST   -Y,R26
0008cd 9508      	RET
                 
                 __SWAPD12:
0008ce 2e18      	MOV  R1,R24
0008cf 2f86      	MOV  R24,R22
0008d0 2d61      	MOV  R22,R1
0008d1 2e19      	MOV  R1,R25
0008d2 2f97      	MOV  R25,R23
0008d3 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0008d4 2e1b      	MOV  R1,R27
0008d5 2fbf      	MOV  R27,R31
0008d6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0008d7 2e1a      	MOV  R1,R26
0008d8 2fae      	MOV  R26,R30
0008d9 2de1      	MOV  R30,R1
0008da 9508      	RET
                 
                 __CPD10:
0008db 9730      	SBIW R30,0
0008dc 4060      	SBCI R22,0
0008dd 4070      	SBCI R23,0
0008de 9508      	RET
                 
                 __SAVELOCR6:
0008df 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008e0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008e1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008e2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008e3 931a      	ST   -Y,R17
0008e4 930a      	ST   -Y,R16
0008e5 9508      	RET
                 
                 __LOADLOCR6:
0008e6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0008e7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0008e8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0008e9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0008ea 8119      	LDD  R17,Y+1
0008eb 8108      	LD   R16,Y
0008ec 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  57 r18:  52 r19:  38 r20:  54 r21:  91 r22: 113 r23:  99 
r24:  63 r25:  61 r26: 161 r27:  83 r28:  30 r29:   1 r30: 396 r31: 148 
x  :  38 y  : 345 z  :  22 
Registers used: 22 out of 35 (62.9%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  13 
adiw  :  27 and   :   5 andi  :   5 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  42 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  26 
brlt  :   2 brmi  :  10 brne  :  49 brpl  :   9 brsh  :   7 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 175 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  53 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  15 cpc   :  19 cpi   :  77 cpse  :   0 dec   :  11 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   5 inc   :   3 jmp   :  22 ld    :  42 ldd   : 187 ldi   : 202 
lds   :   0 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  78 movw  :  50 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   8 out   :  38 pop   :  22 push  :  22 rcall :  67 ret   :  88 
reti  :   0 rjmp  : 134 rol   :  32 ror   :  15 sbc   :  13 sbci  :  19 
sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :  21 sbr   :   4 sbrc  :   4 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  86 std   :  79 sts   :   0 sub   :   8 subi  :  45 swap  :   0 
tst   :  23 wdr   :   0 
Instructions used: 74 out of 116 (63.8%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0011da   4460    110   4570   32768  13.9%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
